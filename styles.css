/*! tailwindcss v4.0.1 | MIT License | https://tailwindcss.com */
@layer theme {
  :root,
  :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      "Liberation Mono", "Courier New", monospace;
    --color-red-50: oklch(0.971 0.013 17.38);
    --color-red-100: oklch(0.936 0.032 17.717);
    --color-red-200: oklch(0.885 0.062 18.334);
    --color-red-300: oklch(0.808 0.114 19.571);
    --color-red-400: oklch(0.704 0.191 22.216);
    --color-red-500: oklch(0.637 0.237 25.331);
    --color-red-600: oklch(0.577 0.245 27.325);
    --color-red-700: oklch(0.505 0.213 27.518);
    --color-red-800: oklch(0.444 0.177 26.899);
    --color-red-900: oklch(0.396 0.141 25.723);
    --color-red-950: oklch(0.258 0.092 26.042);
    --color-orange-50: oklch(0.98 0.016 73.684);
    --color-orange-100: oklch(0.954 0.038 75.164);
    --color-orange-200: oklch(0.901 0.076 70.697);
    --color-orange-300: oklch(0.837 0.128 66.29);
    --color-orange-400: oklch(0.75 0.183 55.934);
    --color-orange-500: oklch(0.705 0.213 47.604);
    --color-orange-600: oklch(0.646 0.222 41.116);
    --color-orange-700: oklch(0.553 0.195 38.402);
    --color-orange-800: oklch(0.47 0.157 37.304);
    --color-orange-900: oklch(0.408 0.123 38.172);
    --color-orange-950: oklch(0.266 0.079 36.259);
    --color-amber-50: oklch(0.987 0.022 95.277);
    --color-amber-100: oklch(0.962 0.059 95.617);
    --color-amber-200: oklch(0.924 0.12 95.746);
    --color-amber-300: oklch(0.879 0.169 91.605);
    --color-amber-400: oklch(0.828 0.189 84.429);
    --color-amber-500: oklch(0.769 0.188 70.08);
    --color-amber-600: oklch(0.666 0.179 58.318);
    --color-amber-700: oklch(0.555 0.163 48.998);
    --color-amber-800: oklch(0.473 0.137 46.201);
    --color-amber-900: oklch(0.414 0.112 45.904);
    --color-amber-950: oklch(0.279 0.077 45.635);
    --color-yellow-50: oklch(0.987 0.026 102.212);
    --color-yellow-100: oklch(0.973 0.071 103.193);
    --color-yellow-200: oklch(0.945 0.129 101.54);
    --color-yellow-300: oklch(0.905 0.182 98.111);
    --color-yellow-400: oklch(0.852 0.199 91.936);
    --color-yellow-500: oklch(0.795 0.184 86.047);
    --color-yellow-600: oklch(0.681 0.162 75.834);
    --color-yellow-700: oklch(0.554 0.135 66.442);
    --color-yellow-800: oklch(0.476 0.114 61.907);
    --color-yellow-900: oklch(0.421 0.095 57.708);
    --color-yellow-950: oklch(0.286 0.066 53.813);
    --color-lime-50: oklch(0.986 0.031 120.757);
    --color-lime-100: oklch(0.967 0.067 122.328);
    --color-lime-200: oklch(0.938 0.127 124.321);
    --color-lime-300: oklch(0.897 0.196 126.665);
    --color-lime-400: oklch(0.841 0.238 128.85);
    --color-lime-500: oklch(0.768 0.233 130.85);
    --color-lime-600: oklch(0.648 0.2 131.684);
    --color-lime-700: oklch(0.532 0.157 131.589);
    --color-lime-800: oklch(0.453 0.124 130.933);
    --color-lime-900: oklch(0.405 0.101 131.063);
    --color-lime-950: oklch(0.274 0.072 132.109);
    --color-green-50: oklch(0.982 0.018 155.826);
    --color-green-100: oklch(0.962 0.044 156.743);
    --color-green-200: oklch(0.925 0.084 155.995);
    --color-green-300: oklch(0.871 0.15 154.449);
    --color-green-400: oklch(0.792 0.209 151.711);
    --color-green-500: oklch(0.723 0.219 149.579);
    --color-green-600: oklch(0.627 0.194 149.214);
    --color-green-700: oklch(0.527 0.154 150.069);
    --color-green-800: oklch(0.448 0.119 151.328);
    --color-green-900: oklch(0.393 0.095 152.535);
    --color-green-950: oklch(0.266 0.065 152.934);
    --color-emerald-50: oklch(0.979 0.021 166.113);
    --color-emerald-100: oklch(0.95 0.052 163.051);
    --color-emerald-200: oklch(0.905 0.093 164.15);
    --color-emerald-300: oklch(0.845 0.143 164.978);
    --color-emerald-400: oklch(0.765 0.177 163.223);
    --color-emerald-500: oklch(0.696 0.17 162.48);
    --color-emerald-600: oklch(0.596 0.145 163.225);
    --color-emerald-700: oklch(0.508 0.118 165.612);
    --color-emerald-800: oklch(0.432 0.095 166.913);
    --color-emerald-900: oklch(0.378 0.077 168.94);
    --color-emerald-950: oklch(0.262 0.051 172.552);
    --color-teal-50: oklch(0.984 0.014 180.72);
    --color-teal-100: oklch(0.953 0.051 180.801);
    --color-teal-200: oklch(0.91 0.096 180.426);
    --color-teal-300: oklch(0.855 0.138 181.071);
    --color-teal-400: oklch(0.777 0.152 181.912);
    --color-teal-500: oklch(0.704 0.14 182.503);
    --color-teal-600: oklch(0.6 0.118 184.704);
    --color-teal-700: oklch(0.511 0.096 186.391);
    --color-teal-800: oklch(0.437 0.078 188.216);
    --color-teal-900: oklch(0.386 0.063 188.416);
    --color-teal-950: oklch(0.277 0.046 192.524);
    --color-cyan-50: oklch(0.984 0.019 200.873);
    --color-cyan-100: oklch(0.956 0.045 203.388);
    --color-cyan-200: oklch(0.917 0.08 205.041);
    --color-cyan-300: oklch(0.865 0.127 207.078);
    --color-cyan-400: oklch(0.789 0.154 211.53);
    --color-cyan-500: oklch(0.715 0.143 215.221);
    --color-cyan-600: oklch(0.609 0.126 221.723);
    --color-cyan-700: oklch(0.52 0.105 223.128);
    --color-cyan-800: oklch(0.45 0.085 224.283);
    --color-cyan-900: oklch(0.398 0.07 227.392);
    --color-cyan-950: oklch(0.302 0.056 229.695);
    --color-sky-50: oklch(0.977 0.013 236.62);
    --color-sky-100: oklch(0.951 0.026 236.824);
    --color-sky-200: oklch(0.901 0.058 230.902);
    --color-sky-300: oklch(0.828 0.111 230.318);
    --color-sky-400: oklch(0.746 0.16 232.661);
    --color-sky-500: oklch(0.685 0.169 237.323);
    --color-sky-600: oklch(0.588 0.158 241.966);
    --color-sky-700: oklch(0.5 0.134 242.749);
    --color-sky-800: oklch(0.443 0.11 240.79);
    --color-sky-900: oklch(0.391 0.09 240.876);
    --color-sky-950: oklch(0.293 0.066 243.157);
    --color-blue-50: oklch(0.97 0.014 254.604);
    --color-blue-100: oklch(0.932 0.032 255.585);
    --color-blue-200: oklch(0.882 0.059 254.128);
    --color-blue-300: oklch(0.809 0.105 251.813);
    --color-blue-400: oklch(0.707 0.165 254.624);
    --color-blue-500: oklch(0.623 0.214 259.815);
    --color-blue-600: oklch(0.546 0.245 262.881);
    --color-blue-700: oklch(0.488 0.243 264.376);
    --color-blue-800: oklch(0.424 0.199 265.638);
    --color-blue-900: oklch(0.379 0.146 265.522);
    --color-blue-950: oklch(0.282 0.091 267.935);
    --color-indigo-50: oklch(0.962 0.018 272.314);
    --color-indigo-100: oklch(0.93 0.034 272.788);
    --color-indigo-200: oklch(0.87 0.065 274.039);
    --color-indigo-300: oklch(0.785 0.115 274.713);
    --color-indigo-400: oklch(0.673 0.182 276.935);
    --color-indigo-500: oklch(0.585 0.233 277.117);
    --color-indigo-600: oklch(0.511 0.262 276.966);
    --color-indigo-700: oklch(0.457 0.24 277.023);
    --color-indigo-800: oklch(0.398 0.195 277.366);
    --color-indigo-900: oklch(0.359 0.144 278.697);
    --color-indigo-950: oklch(0.257 0.09 281.288);
    --color-violet-50: oklch(0.969 0.016 293.756);
    --color-violet-100: oklch(0.943 0.029 294.588);
    --color-violet-200: oklch(0.894 0.057 293.283);
    --color-violet-300: oklch(0.811 0.111 293.571);
    --color-violet-400: oklch(0.702 0.183 293.541);
    --color-violet-500: oklch(0.606 0.25 292.717);
    --color-violet-600: oklch(0.541 0.281 293.009);
    --color-violet-700: oklch(0.491 0.27 292.581);
    --color-violet-800: oklch(0.432 0.232 292.759);
    --color-violet-900: oklch(0.38 0.189 293.745);
    --color-violet-950: oklch(0.283 0.141 291.089);
    --color-purple-50: oklch(0.977 0.014 308.299);
    --color-purple-100: oklch(0.946 0.033 307.174);
    --color-purple-200: oklch(0.902 0.063 306.703);
    --color-purple-300: oklch(0.827 0.119 306.383);
    --color-purple-400: oklch(0.714 0.203 305.504);
    --color-purple-500: oklch(0.627 0.265 303.9);
    --color-purple-600: oklch(0.558 0.288 302.321);
    --color-purple-700: oklch(0.496 0.265 301.924);
    --color-purple-800: oklch(0.438 0.218 303.724);
    --color-purple-900: oklch(0.381 0.176 304.987);
    --color-purple-950: oklch(0.291 0.149 302.717);
    --color-fuchsia-50: oklch(0.977 0.017 320.058);
    --color-fuchsia-100: oklch(0.952 0.037 318.852);
    --color-fuchsia-200: oklch(0.903 0.076 319.62);
    --color-fuchsia-300: oklch(0.833 0.145 321.434);
    --color-fuchsia-400: oklch(0.74 0.238 322.16);
    --color-fuchsia-500: oklch(0.667 0.295 322.15);
    --color-fuchsia-600: oklch(0.591 0.293 322.896);
    --color-fuchsia-700: oklch(0.518 0.253 323.949);
    --color-fuchsia-800: oklch(0.452 0.211 324.591);
    --color-fuchsia-900: oklch(0.401 0.17 325.612);
    --color-fuchsia-950: oklch(0.293 0.136 325.661);
    --color-pink-50: oklch(0.971 0.014 343.198);
    --color-pink-100: oklch(0.948 0.028 342.258);
    --color-pink-200: oklch(0.899 0.061 343.231);
    --color-pink-300: oklch(0.823 0.12 346.018);
    --color-pink-400: oklch(0.718 0.202 349.761);
    --color-pink-500: oklch(0.656 0.241 354.308);
    --color-pink-600: oklch(0.592 0.249 0.584);
    --color-pink-700: oklch(0.525 0.223 3.958);
    --color-pink-800: oklch(0.459 0.187 3.815);
    --color-pink-900: oklch(0.408 0.153 2.432);
    --color-pink-950: oklch(0.284 0.109 3.907);
    --color-rose-50: oklch(0.969 0.015 12.422);
    --color-rose-100: oklch(0.941 0.03 12.58);
    --color-rose-200: oklch(0.892 0.058 10.001);
    --color-rose-300: oklch(0.81 0.117 11.638);
    --color-rose-400: oklch(0.712 0.194 13.428);
    --color-rose-500: oklch(0.645 0.246 16.439);
    --color-rose-600: oklch(0.586 0.253 17.585);
    --color-rose-700: oklch(0.514 0.222 16.935);
    --color-rose-800: oklch(0.455 0.188 13.697);
    --color-rose-900: oklch(0.41 0.159 10.272);
    --color-rose-950: oklch(0.271 0.105 12.094);
    --color-slate-50: oklch(0.984 0.003 247.858);
    --color-slate-100: oklch(0.968 0.007 247.896);
    --color-slate-200: oklch(0.929 0.013 255.508);
    --color-slate-300: oklch(0.869 0.022 252.894);
    --color-slate-400: oklch(0.704 0.04 256.788);
    --color-slate-500: oklch(0.554 0.046 257.417);
    --color-slate-600: oklch(0.446 0.043 257.281);
    --color-slate-700: oklch(0.372 0.044 257.287);
    --color-slate-800: oklch(0.279 0.041 260.031);
    --color-slate-900: oklch(0.208 0.042 265.755);
    --color-slate-950: oklch(0.129 0.042 264.695);
    --color-gray-50: oklch(0.985 0.002 247.839);
    --color-gray-100: oklch(0.967 0.003 264.542);
    --color-gray-200: oklch(0.928 0.006 264.531);
    --color-gray-300: oklch(0.872 0.01 258.338);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-gray-500: oklch(0.551 0.027 264.364);
    --color-gray-600: oklch(0.446 0.03 256.802);
    --color-gray-700: oklch(0.373 0.034 259.733);
    --color-gray-800: oklch(0.278 0.033 256.848);
    --color-gray-900: oklch(0.21 0.034 264.665);
    --color-gray-950: oklch(0.13 0.028 261.692);
    --color-zinc-50: oklch(0.985 0 0);
    --color-zinc-100: oklch(0.967 0.001 286.375);
    --color-zinc-200: oklch(0.92 0.004 286.32);
    --color-zinc-300: oklch(0.871 0.006 286.286);
    --color-zinc-400: oklch(0.705 0.015 286.067);
    --color-zinc-500: oklch(0.552 0.016 285.938);
    --color-zinc-600: oklch(0.442 0.017 285.786);
    --color-zinc-700: oklch(0.37 0.013 285.805);
    --color-zinc-800: oklch(0.274 0.006 286.033);
    --color-zinc-900: oklch(0.21 0.006 285.885);
    --color-zinc-950: oklch(0.141 0.005 285.823);
    --color-neutral-50: oklch(0.985 0 0);
    --color-neutral-100: oklch(0.97 0 0);
    --color-neutral-200: oklch(0.922 0 0);
    --color-neutral-300: oklch(0.87 0 0);
    --color-neutral-400: oklch(0.708 0 0);
    --color-neutral-500: oklch(0.556 0 0);
    --color-neutral-600: oklch(0.439 0 0);
    --color-neutral-700: oklch(0.371 0 0);
    --color-neutral-800: oklch(0.269 0 0);
    --color-neutral-900: oklch(0.205 0 0);
    --color-neutral-950: oklch(0.145 0 0);
    --color-stone-50: oklch(0.985 0.001 106.423);
    --color-stone-100: oklch(0.97 0.001 106.424);
    --color-stone-200: oklch(0.923 0.003 48.717);
    --color-stone-300: oklch(0.869 0.005 56.366);
    --color-stone-400: oklch(0.709 0.01 56.259);
    --color-stone-500: oklch(0.553 0.013 58.071);
    --color-stone-600: oklch(0.444 0.011 73.639);
    --color-stone-700: oklch(0.374 0.01 67.558);
    --color-stone-800: oklch(0.268 0.007 34.298);
    --color-stone-900: oklch(0.216 0.006 56.043);
    --color-stone-950: oklch(0.147 0.004 49.25);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-sm: 40rem;
    --breakpoint-md: 48rem;
    --breakpoint-lg: 64rem;
    --breakpoint-xl: 80rem;
    --breakpoint-2xl: 96rem;
    --container-3xs: 16rem;
    --container-2xs: 18rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-thin: 100;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-normal: 1.5;
    --leading-relaxed: 1.625;
    --leading-loose: 2;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --radius-4xl: 2rem;
    --shadow-2xs: 0 1px #0000000d;
    --shadow-xs: 0 1px 2px 0 #0000000d;
    --shadow-sm: 0 1px 3px 0 #0000001a, 0 1px 2px -1px #0000001a;
    --shadow-md: 0 4px 6px -1px #0000001a, 0 2px 4px -2px #0000001a;
    --shadow-lg: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
    --shadow-xl: 0 20px 25px -5px #0000001a, 0 8px 10px -6px #0000001a;
    --shadow-2xl: 0 25px 50px -12px #00000040;
    --inset-shadow-2xs: inset 0 1px #0000000d;
    --inset-shadow-xs: inset 0 1px 1px #0000000d;
    --inset-shadow-sm: inset 0 2px 4px #0000000d;
    --drop-shadow-xs: 0 1px 1px #0000000d;
    --drop-shadow-sm: 0 1px 2px #00000026;
    --drop-shadow-md: 0 3px 3px #0000001f;
    --drop-shadow-lg: 0 4px 4px #00000026;
    --drop-shadow-xl: 0 9px 7px #0000001a;
    --drop-shadow-2xl: 0 25px 25px #00000026;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-xs: 4px;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --blur-2xl: 40px;
    --blur-3xl: 64px;
    --perspective-dramatic: 100px;
    --perspective-near: 300px;
    --perspective-normal: 500px;
    --perspective-midrange: 800px;
    --perspective-distant: 1200px;
    --aspect-video: 16/9;
    --default-transition-duration: 0.15s;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
  }
}
@layer base {
  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  html,
  :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji"
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      "Liberation Mono",
      "Courier New",
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    vertical-align: middle;
    display: block;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }
  ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button {
    height: auto;
  }
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
  [type="text"],
  input:where(:not([type])),
  [type="email"],
  [type="url"],
  [type="password"],
  [type="number"],
  [type="date"],
  [type="datetime-local"],
  [type="month"],
  [type="search"],
  [type="tel"],
  [type="time"],
  [type="week"],
  [multiple],
  textarea,
  select {
    appearance: none;
    border-color: oklch(0.551 0.027 264.364);
    --tw-shadow: 0 0 #0000;
    background-color: #fff;
    border-width: 1px;
    border-radius: 0;
    padding: 0.5rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5rem;
  }
  :is(
      [type="text"],
      input:where(:not([type])),
      [type="email"],
      [type="url"],
      [type="password"],
      [type="number"],
      [type="date"],
      [type="datetime-local"],
      [type="month"],
      [type="search"],
      [type="tel"],
      [type="time"],
      [type="week"],
      [multiple],
      textarea,
      select
    ):focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty,);
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(0.546 0.245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow);
    border-color: oklch(0.546 0.245 262.881);
    outline: 2px solid #0000;
  }
  input::placeholder,
  textarea::placeholder {
    color: oklch(0.551 0.027 264.364);
    opacity: 1;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-date-and-time-value {
    min-height: 1.5em;
  }
  ::-webkit-date-and-time-value {
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit {
    padding-top: 0;
    padding-bottom: 0;
  }
  ::-webkit-datetime-edit-year-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  ::-webkit-datetime-edit-month-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  ::-webkit-datetime-edit-day-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  ::-webkit-datetime-edit-hour-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  ::-webkit-datetime-edit-minute-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  ::-webkit-datetime-edit-second-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  ::-webkit-datetime-edit-millisecond-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  ::-webkit-datetime-edit-meridiem-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  select {
    print-color-adjust: exact;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='oklch(0.551 0.027 264.364)' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 2.5rem;
  }
  [multiple],
  [size]:where(select:not([size="1"])) {
    background-image: initial;
    background-position: initial;
    background-repeat: unset;
    background-size: initial;
    print-color-adjust: unset;
    padding-right: 0.75rem;
  }
  [type="checkbox"],
  [type="radio"] {
    appearance: none;
    print-color-adjust: exact;
    vertical-align: middle;
    -webkit-user-select: none;
    user-select: none;
    width: 1rem;
    height: 1rem;
    color: oklch(0.546 0.245 262.881);
    border-color: oklch(0.551 0.027 264.364);
    --tw-shadow: 0 0 #0000;
    background-color: #fff;
    background-origin: border-box;
    border-width: 1px;
    flex-shrink: 0;
    padding: 0;
    display: inline-block;
  }
  [type="checkbox"] {
    border-radius: 0;
  }
  [type="radio"] {
    border-radius: 100%;
  }
  [type="checkbox"]:focus,
  [type="radio"]:focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty,);
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(0.546 0.245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
      calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow);
    outline: 2px solid #0000;
  }
  [type="checkbox"]:checked,
  [type="radio"]:checked {
    background-color: currentColor;
    background-position: 50%;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    border-color: #0000;
  }
  [type="checkbox"]:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
  }
  @media (forced-colors: active) {
    [type="checkbox"]:checked {
      appearance: auto;
    }
  }
  [type="radio"]:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
  }
  @media (forced-colors: active) {
    [type="radio"]:checked {
      appearance: auto;
    }
  }
  [type="checkbox"]:checked:hover,
  [type="checkbox"]:checked:focus,
  [type="radio"]:checked:hover,
  [type="radio"]:checked:focus {
    background-color: currentColor;
    border-color: #0000;
  }
  [type="checkbox"]:indeterminate {
    background-color: currentColor;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
    background-position: 50%;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    border-color: #0000;
  }
  @media (forced-colors: active) {
    [type="checkbox"]:indeterminate {
      appearance: auto;
    }
  }
  [type="checkbox"]:indeterminate:hover,
  [type="checkbox"]:indeterminate:focus {
    background-color: currentColor;
    border-color: #0000;
  }
  [type="file"] {
    background: unset;
    border-color: inherit;
    font-size: unset;
    line-height: inherit;
    border-width: 0;
    border-radius: 0;
    padding: 0;
  }
  [type="file"]:focus {
    outline: 1px solid buttontext;
    outline: 1px auto -webkit-focus-ring-color;
  }
}
@layer components;
@layer utilities {
  .\@container,
  .\@container-\[inline-size\] {
    container-type: inline-size;
  }
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .\!visible {
    visibility: visible !important;
  }
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }
  .not-sr-only {
    clip: auto;
    white-space: normal;
    width: auto;
    height: auto;
    margin: 0;
    padding: 0;
    position: static;
    overflow: visible;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .end-1 {
    inset-inline-end: calc(var(--spacing) * 1);
  }
  .end-2 {
    inset-inline-end: calc(var(--spacing) * 2);
  }
  .isolate {
    isolation: isolate;
  }
  .isolation-auto {
    isolation: auto;
  }
  .z-auto {
    z-index: auto;
  }
  .order-first {
    order: calc(-infinity);
  }
  .order-last {
    order: calc(infinity);
  }
  .order-none {
    order: 0;
  }
  .col-auto {
    grid-column: auto;
  }
  .col-span-1 {
    grid-column: span 1 / span 1;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .col-span-full {
    grid-column: 1/-1;
  }
  .col-start-auto {
    grid-column-start: auto;
  }
  .col-end-auto {
    grid-column-end: auto;
  }
  .row-auto {
    grid-row: auto;
  }
  .row-span-full {
    grid-row: 1/-1;
  }
  .row-start-auto {
    grid-row-start: auto;
  }
  .row-end-auto {
    grid-row-end: auto;
  }
  .float-end {
    float: inline-end;
  }
  .float-left {
    float: left;
  }
  .float-none {
    float: none;
  }
  .float-right {
    float: right;
  }
  .float-start {
    float: inline-start;
  }
  .clear-both {
    clear: both;
  }
  .clear-end {
    clear: inline-end;
  }
  .clear-left {
    clear: left;
  }
  .clear-none {
    clear: none;
  }
  .clear-right {
    clear: right;
  }
  .clear-start {
    clear: inline-start;
  }
  .container {
    width: 100%;
  }
  @media (width>=40rem) {
    .container {
      max-width: 40rem;
    }
  }
  @media (width>=48rem) {
    .container {
      max-width: 48rem;
    }
  }
  @media (width>=64rem) {
    .container {
      max-width: 64rem;
    }
  }
  @media (width>=80rem) {
    .container {
      max-width: 80rem;
    }
  }
  @media (width>=96rem) {
    .container {
      max-width: 96rem;
    }
  }
  .container\! {
    width: 100% !important;
  }
  @media (width>=40rem) {
    .container\! {
      max-width: 40rem !important;
    }
  }
  @media (width>=48rem) {
    .container\! {
      max-width: 48rem !important;
    }
  }
  @media (width>=64rem) {
    .container\! {
      max-width: 64rem !important;
    }
  }
  @media (width>=80rem) {
    .container\! {
      max-width: 80rem !important;
    }
  }
  @media (width>=96rem) {
    .container\! {
      max-width: 96rem !important;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .prose {
    color: var(--tw-prose-body);
    --tw-prose-body: oklch(0.373 0.034 259.733);
    --tw-prose-headings: oklch(0.21 0.034 264.665);
    --tw-prose-lead: oklch(0.446 0.03 256.802);
    --tw-prose-links: oklch(0.21 0.034 264.665);
    --tw-prose-bold: oklch(0.21 0.034 264.665);
    --tw-prose-counters: oklch(0.551 0.027 264.364);
    --tw-prose-bullets: oklch(0.872 0.01 258.338);
    --tw-prose-hr: oklch(0.928 0.006 264.531);
    --tw-prose-quotes: oklch(0.21 0.034 264.665);
    --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
    --tw-prose-captions: oklch(0.551 0.027 264.364);
    --tw-prose-kbd: oklch(0.21 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.21 0.034 264.665);
    --tw-prose-pre-code: oklch(0.928 0.006 264.531);
    --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
    --tw-prose-th-borders: oklch(0.872 0.01 258.338);
    --tw-prose-td-borders: oklch(0.928 0.006 264.531);
    --tw-prose-invert-body: oklch(0.872 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
    --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
    --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
    --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
    --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
    max-width: 65ch;
    font-size: 1rem;
    line-height: 1.75;
  }
  .prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-lead);
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    font-size: 1.25em;
    line-height: 1.6;
  }
  .prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-links);
    font-weight: 500;
    text-decoration: underline;
  }
  .prose
    :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  .prose
    :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(blockquote strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ),
  .prose
    :where(thead th strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }
  .prose :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: decimal;
  }
  .prose
    :where(ol[type="A"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-alpha;
  }
  .prose
    :where(ol[type="a"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-alpha;
  }
  .prose
    :where(ol[type="A s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-alpha;
  }
  .prose
    :where(ol[type="a s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-alpha;
  }
  .prose
    :where(ol[type="I"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-roman;
  }
  .prose
    :where(ol[type="i"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-roman;
  }
  .prose
    :where(ol[type="I s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-roman;
  }
  .prose
    :where(ol[type="i s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-roman;
  }
  .prose
    :where(ol[type="1"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: decimal;
  }
  .prose :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: disc;
  }
  .prose
    :where(ol > li):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    color: var(--tw-prose-counters);
    font-weight: 400;
  }
  .prose
    :where(ul > li):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    color: var(--tw-prose-bullets);
  }
  .prose :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.25em;
    font-weight: 600;
  }
  .prose :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .prose
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-quotes);
    border-inline-start-width: 0.25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: "“" "”" "‘" "’";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
    font-style: italic;
    font-weight: 500;
  }
  .prose
    :where(blockquote p:first-of-type):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):before {
    content: open-quote;
  }
  .prose
    :where(blockquote p:last-of-type):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: close-quote;
  }
  .prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 0;
    margin-bottom: 0.888889em;
    font-size: 2.25em;
    font-weight: 800;
    line-height: 1.11111;
  }
  .prose
    :where(h1 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
    font-weight: 900;
  }
  .prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 2em;
    margin-bottom: 1em;
    font-size: 1.5em;
    font-weight: 700;
    line-height: 1.33333;
  }
  .prose
    :where(h2 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
    font-weight: 800;
  }
  .prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    font-size: 1.25em;
    font-weight: 600;
    line-height: 1.6;
  }
  .prose
    :where(h3 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
    font-weight: 700;
  }
  .prose :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    font-weight: 600;
    line-height: 1.5;
  }
  .prose
    :where(h4 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
    font-weight: 700;
  }
  .prose :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose
    :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
    display: block;
  }
  .prose
    :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-kbd);
    box-shadow:
      0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
      0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
    padding-top: 0.1875em;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    border-radius: 0.3125rem;
    padding-inline-start: 0.375em;
    font-family: inherit;
    font-size: 0.875em;
    font-weight: 500;
  }
  .prose
    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-code);
    font-size: 0.875em;
    font-weight: 600;
  }
  .prose
    :where(code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):before,
  .prose
    :where(code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: "`";
  }
  .prose
    :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }
  .prose
    :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: 0.875em;
  }
  .prose
    :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: 0.9em;
  }
  .prose
    :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(blockquote code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ),
  .prose
    :where(thead th code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }
  .prose :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    padding-top: 0.857143em;
    padding-inline-end: 1.14286em;
    padding-bottom: 0.857143em;
    border-radius: 0.375rem;
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
    padding-inline-start: 1.14286em;
    font-size: 0.875em;
    font-weight: 400;
    line-height: 1.71429;
    overflow-x: auto;
  }
  .prose
    :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
    background-color: #0000;
    border-width: 0;
    border-radius: 0;
    padding: 0;
  }
  .prose
    :where(pre code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):before,
  .prose
    :where(pre code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: none;
  }
  .prose
    :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    table-layout: auto;
    width: 100%;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.71429;
  }
  .prose
    :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }
  .prose
    :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    vertical-align: bottom;
    padding-inline-end: 0.571429em;
    padding-bottom: 0.571429em;
    padding-inline-start: 0.571429em;
    font-weight: 600;
  }
  .prose
    :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }
  .prose
    :where(tbody tr:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    border-bottom-width: 0;
  }
  .prose
    :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: baseline;
  }
  .prose
    :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }
  .prose
    :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: top;
  }
  .prose
    :where(th, td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-align: start;
  }
  .prose
    :where(figure > *):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose
    :where(figcaption):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-captions);
    margin-top: 0.857143em;
    font-size: 0.875em;
    line-height: 1.42857;
  }
  .prose
    :where(picture > img):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .prose
    :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.375em;
  }
  .prose
    :where(.prose > ul > li p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose
    :where(.prose > ul > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.25em;
  }
  .prose
    :where(.prose > ul > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.25em;
  }
  .prose
    :where(.prose > ol > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.25em;
  }
  .prose
    :where(.prose > ol > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.25em;
  }
  .prose
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.625em;
  }
  .prose
    :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .prose
    :where(thead th:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose
    :where(thead th:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose
    :where(tbody td, tfoot td):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-top: 0.571429em;
    padding-inline-end: 0.571429em;
    padding-bottom: 0.571429em;
    padding-inline-start: 0.571429em;
  }
  .prose
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose
    :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose
    :where(.prose > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
  }
  .prose
    :where(.prose > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 0;
  }
  .prose-2xl {
    font-size: 1.5rem;
    line-height: 1.66667;
  }
  .prose-2xl
    :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.33333em;
    margin-bottom: 1.33333em;
  }
  .prose-2xl
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.06667em;
    margin-bottom: 1.06667em;
    font-size: 1.25em;
    line-height: 1.46667;
  }
  .prose-2xl
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.77778em;
    margin-bottom: 1.77778em;
    padding-inline-start: 1.11111em;
  }
  .prose-2xl
    :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0.875em;
    font-size: 2.66667em;
    line-height: 1;
  }
  .prose-2xl
    :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.5em;
    margin-bottom: 0.833333em;
    font-size: 2em;
    line-height: 1.08333;
  }
  .prose-2xl
    :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.55556em;
    margin-bottom: 0.666667em;
    font-size: 1.5em;
    line-height: 1.22222;
  }
  .prose-2xl
    :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.66667em;
    margin-bottom: 0.666667em;
    line-height: 1.5;
  }
  .prose-2xl
    :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-2xl
    :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose-2xl
    :where(picture > img):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose-2xl
    :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose-2xl
    :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: 0.25em;
    padding-inline-end: 0.333333em;
    padding-bottom: 0.25em;
    border-radius: 0.375rem;
    padding-inline-start: 0.333333em;
    font-size: 0.833333em;
  }
  .prose-2xl
    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.833333em;
  }
  .prose-2xl
    :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.875em;
  }
  .prose-2xl
    :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.888889em;
  }
  .prose-2xl
    :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: 1.2em;
    padding-inline-end: 1.6em;
    padding-bottom: 1.2em;
    border-radius: 0.5rem;
    margin-top: 2em;
    margin-bottom: 2em;
    padding-inline-start: 1.6em;
    font-size: 0.833333em;
    line-height: 1.8;
  }
  .prose-2xl
    :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-2xl
    :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.33333em;
    margin-bottom: 1.33333em;
    padding-inline-start: 1.58333em;
  }
  .prose-2xl
    :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .prose-2xl
    :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-2xl
    :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.416667em;
  }
  .prose-2xl
    :where(.prose-2xl > ul > li p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.833333em;
    margin-bottom: 0.833333em;
  }
  .prose-2xl
    :where(.prose-2xl > ul > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.33333em;
  }
  .prose-2xl
    :where(.prose-2xl > ul > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.33333em;
  }
  .prose-2xl
    :where(.prose-2xl > ol > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.33333em;
  }
  .prose-2xl
    :where(.prose-2xl > ol > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.33333em;
  }
  .prose-2xl
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.666667em;
    margin-bottom: 0.666667em;
  }
  .prose-2xl
    :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.33333em;
    margin-bottom: 1.33333em;
  }
  .prose-2xl
    :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.33333em;
  }
  .prose-2xl
    :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.58333em;
  }
  .prose-2xl
    :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .prose-2xl
    :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-2xl
    :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-2xl
    :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-2xl
    :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .prose-2xl
    :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.833333em;
    line-height: 1.4;
  }
  .prose-2xl
    :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 0.6em;
    padding-bottom: 0.8em;
    padding-inline-start: 0.6em;
  }
  .prose-2xl
    :where(thead th:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose-2xl
    :where(thead th:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose-2xl
    :where(tbody td, tfoot td):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-top: 0.8em;
    padding-inline-end: 0.6em;
    padding-bottom: 0.8em;
    padding-inline-start: 0.6em;
  }
  .prose-2xl
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose-2xl
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose-2xl
    :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose-2xl
    :where(figure > *):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose-2xl
    :where(figcaption):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1em;
    font-size: 0.833333em;
    line-height: 1.6;
  }
  .prose-2xl
    :where(.prose-2xl > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
  }
  .prose-2xl
    :where(.prose-2xl > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 0;
  }
  .prose-base {
    font-size: 1rem;
    line-height: 1.75;
  }
  .prose-base
    :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose-base
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    font-size: 1.25em;
    line-height: 1.6;
  }
  .prose-base
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
  }
  .prose-base
    :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0.888889em;
    font-size: 2.25em;
    line-height: 1.11111;
  }
  .prose-base
    :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 1em;
    font-size: 1.5em;
    line-height: 1.33333;
  }
  .prose-base
    :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    font-size: 1.25em;
    line-height: 1.6;
  }
  .prose-base
    :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
  }
  .prose-base
    :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-base
    :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose-base
    :where(picture > img):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose-base
    :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose-base
    :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: 0.1875em;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    border-radius: 0.3125rem;
    padding-inline-start: 0.375em;
    font-size: 0.875em;
  }
  .prose-base
    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-base
    :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.875em;
  }
  .prose-base
    :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
  }
  .prose-base
    :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: 0.857143em;
    padding-inline-end: 1.14286em;
    padding-bottom: 0.857143em;
    border-radius: 0.375rem;
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
    padding-inline-start: 1.14286em;
    font-size: 0.875em;
    line-height: 1.71429;
  }
  .prose-base
    :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-base
    :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
  }
  .prose-base
    :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .prose-base
    :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-base
    :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.375em;
  }
  .prose-base
    :where(.prose-base > ul > li p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose-base
    :where(.prose-base > ul > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.25em;
  }
  .prose-base
    :where(.prose-base > ul > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.25em;
  }
  .prose-base
    :where(.prose-base > ol > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.25em;
  }
  .prose-base
    :where(.prose-base > ol > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.25em;
  }
  .prose-base
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose-base
    :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose-base
    :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
  }
  .prose-base
    :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.625em;
  }
  .prose-base
    :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .prose-base
    :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-base
    :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-base
    :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-base
    :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .prose-base
    :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.875em;
    line-height: 1.71429;
  }
  .prose-base
    :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 0.571429em;
    padding-bottom: 0.571429em;
    padding-inline-start: 0.571429em;
  }
  .prose-base
    :where(thead th:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose-base
    :where(thead th:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose-base
    :where(tbody td, tfoot td):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-top: 0.571429em;
    padding-inline-end: 0.571429em;
    padding-bottom: 0.571429em;
    padding-inline-start: 0.571429em;
  }
  .prose-base
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose-base
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose-base
    :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose-base
    :where(figure > *):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose-base
    :where(figcaption):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.857143em;
    font-size: 0.875em;
    line-height: 1.42857;
  }
  .prose-base
    :where(.prose-base > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
  }
  .prose-base
    :where(.prose-base > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 0;
  }
  .prose-lg {
    font-size: 1.125rem;
    line-height: 1.77778;
  }
  .prose-lg
    :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.33333em;
    margin-bottom: 1.33333em;
  }
  .prose-lg
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.09091em;
    margin-bottom: 1.09091em;
    font-size: 1.22222em;
    line-height: 1.45455;
  }
  .prose-lg
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.66667em;
    margin-bottom: 1.66667em;
    padding-inline-start: 1em;
  }
  .prose-lg
    :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0.833333em;
    font-size: 2.66667em;
    line-height: 1;
  }
  .prose-lg
    :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.86667em;
    margin-bottom: 1.06667em;
    font-size: 1.66667em;
    line-height: 1.33333;
  }
  .prose-lg
    :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.66667em;
    margin-bottom: 0.666667em;
    font-size: 1.33333em;
    line-height: 1.5;
  }
  .prose-lg
    :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.77778em;
    margin-bottom: 0.444444em;
    line-height: 1.55556;
  }
  .prose-lg
    :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-lg
    :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.77778em;
    margin-bottom: 1.77778em;
  }
  .prose-lg
    :where(picture > img):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose-lg
    :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.77778em;
    margin-bottom: 1.77778em;
  }
  .prose-lg
    :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: 0.222222em;
    padding-inline-end: 0.444444em;
    padding-bottom: 0.222222em;
    border-radius: 0.3125rem;
    padding-inline-start: 0.444444em;
    font-size: 0.888889em;
  }
  .prose-lg
    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.888889em;
  }
  .prose-lg
    :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.866667em;
  }
  .prose-lg
    :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.875em;
  }
  .prose-lg
    :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: 1em;
    padding-inline-end: 1.5em;
    padding-bottom: 1em;
    border-radius: 0.375rem;
    margin-top: 2em;
    margin-bottom: 2em;
    padding-inline-start: 1.5em;
    font-size: 0.888889em;
    line-height: 1.75;
  }
  .prose-lg
    :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-lg
    :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.33333em;
    margin-bottom: 1.33333em;
    padding-inline-start: 1.55556em;
  }
  .prose-lg
    :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.666667em;
    margin-bottom: 0.666667em;
  }
  .prose-lg
    :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-lg
    :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.444444em;
  }
  .prose-lg
    :where(.prose-lg > ul > li p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.888889em;
    margin-bottom: 0.888889em;
  }
  .prose-lg
    :where(.prose-lg > ul > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.33333em;
  }
  .prose-lg
    :where(.prose-lg > ul > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.33333em;
  }
  .prose-lg
    :where(.prose-lg > ol > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.33333em;
  }
  .prose-lg
    :where(.prose-lg > ol > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.33333em;
  }
  .prose-lg
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.888889em;
    margin-bottom: 0.888889em;
  }
  .prose-lg
    :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.33333em;
    margin-bottom: 1.33333em;
  }
  .prose-lg
    :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.33333em;
  }
  .prose-lg
    :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.666667em;
    padding-inline-start: 1.55556em;
  }
  .prose-lg
    :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 3.11111em;
    margin-bottom: 3.11111em;
  }
  .prose-lg
    :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-lg
    :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-lg
    :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-lg
    :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .prose-lg
    :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.888889em;
    line-height: 1.5;
  }
  .prose-lg
    :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 0.75em;
    padding-bottom: 0.75em;
    padding-inline-start: 0.75em;
  }
  .prose-lg
    :where(thead th:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose-lg
    :where(thead th:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose-lg
    :where(tbody td, tfoot td):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-top: 0.75em;
    padding-inline-end: 0.75em;
    padding-bottom: 0.75em;
    padding-inline-start: 0.75em;
  }
  .prose-lg
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose-lg
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose-lg
    :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.77778em;
    margin-bottom: 1.77778em;
  }
  .prose-lg
    :where(figure > *):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose-lg
    :where(figcaption):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1em;
    font-size: 0.888889em;
    line-height: 1.5;
  }
  .prose-lg
    :where(.prose-lg > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
  }
  .prose-lg
    :where(.prose-lg > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 0;
  }
  .prose-sm {
    font-size: 0.875rem;
    line-height: 1.71429;
  }
  .prose-sm
    :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
    margin-bottom: 1.14286em;
  }
  .prose-sm
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.888889em;
    margin-bottom: 0.888889em;
    font-size: 1.28571em;
    line-height: 1.55556;
  }
  .prose-sm
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.33333em;
    margin-bottom: 1.33333em;
    padding-inline-start: 1.11111em;
  }
  .prose-sm
    :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0.8em;
    font-size: 2.14286em;
    line-height: 1.2;
  }
  .prose-sm
    :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.6em;
    margin-bottom: 0.8em;
    font-size: 1.42857em;
    line-height: 1.4;
  }
  .prose-sm
    :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.55556em;
    margin-bottom: 0.444444em;
    font-size: 1.28571em;
    line-height: 1.55556;
  }
  .prose-sm
    :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.42857em;
    margin-bottom: 0.571429em;
    line-height: 1.42857;
  }
  .prose-sm
    :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-sm
    :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
  }
  .prose-sm
    :where(picture > img):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose-sm
    :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
  }
  .prose-sm
    :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: 0.142857em;
    padding-inline-end: 0.357143em;
    padding-bottom: 0.142857em;
    border-radius: 0.3125rem;
    padding-inline-start: 0.357143em;
    font-size: 0.857143em;
  }
  .prose-sm
    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.857143em;
  }
  .prose-sm
    :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
  }
  .prose-sm
    :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.888889em;
  }
  .prose-sm
    :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: 0.666667em;
    padding-inline-end: 1em;
    padding-bottom: 0.666667em;
    border-radius: 0.25rem;
    margin-top: 1.66667em;
    margin-bottom: 1.66667em;
    padding-inline-start: 1em;
    font-size: 0.857143em;
    line-height: 1.66667;
  }
  .prose-sm
    :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-sm
    :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
    margin-bottom: 1.14286em;
    padding-inline-start: 1.57143em;
  }
  .prose-sm
    :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.285714em;
    margin-bottom: 0.285714em;
  }
  .prose-sm
    :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-sm
    :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.428571em;
  }
  .prose-sm
    :where(.prose-sm > ul > li p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.571429em;
    margin-bottom: 0.571429em;
  }
  .prose-sm
    :where(.prose-sm > ul > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.14286em;
  }
  .prose-sm
    :where(.prose-sm > ul > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.14286em;
  }
  .prose-sm
    :where(.prose-sm > ol > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.14286em;
  }
  .prose-sm
    :where(.prose-sm > ol > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.14286em;
  }
  .prose-sm
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.571429em;
    margin-bottom: 0.571429em;
  }
  .prose-sm
    :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
    margin-bottom: 1.14286em;
  }
  .prose-sm
    :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
  }
  .prose-sm
    :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.285714em;
    padding-inline-start: 1.57143em;
  }
  .prose-sm
    :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2.85714em;
    margin-bottom: 2.85714em;
  }
  .prose-sm
    :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-sm
    :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-sm
    :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-sm
    :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .prose-sm
    :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.857143em;
    line-height: 1.5;
  }
  .prose-sm
    :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 1em;
    padding-bottom: 0.666667em;
    padding-inline-start: 1em;
  }
  .prose-sm
    :where(thead th:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose-sm
    :where(thead th:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose-sm
    :where(tbody td, tfoot td):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-top: 0.666667em;
    padding-inline-end: 1em;
    padding-bottom: 0.666667em;
    padding-inline-start: 1em;
  }
  .prose-sm
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose-sm
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose-sm
    :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
  }
  .prose-sm
    :where(figure > *):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose-sm
    :where(figcaption):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.666667em;
    font-size: 0.857143em;
    line-height: 1.33333;
  }
  .prose-sm
    :where(.prose-sm > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
  }
  .prose-sm
    :where(.prose-sm > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 0;
  }
  .prose-xl {
    font-size: 1.25rem;
    line-height: 1.8;
  }
  .prose-xl
    :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  .prose-xl
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1em;
    margin-bottom: 1em;
    font-size: 1.2em;
    line-height: 1.5;
  }
  .prose-xl
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1.06667em;
  }
  .prose-xl
    :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0.857143em;
    font-size: 2.8em;
    line-height: 1;
  }
  .prose-xl
    :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.55556em;
    margin-bottom: 0.888889em;
    font-size: 1.8em;
    line-height: 1.11111;
  }
  .prose-xl
    :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.6em;
    margin-bottom: 0.666667em;
    font-size: 1.5em;
    line-height: 1.33333;
  }
  .prose-xl
    :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.8em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }
  .prose-xl
    :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-xl
    :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose-xl
    :where(picture > img):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose-xl
    :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose-xl
    :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: 0.25em;
    padding-inline-end: 0.4em;
    padding-bottom: 0.25em;
    border-radius: 0.3125rem;
    padding-inline-start: 0.4em;
    font-size: 0.9em;
  }
  .prose-xl
    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
  }
  .prose-xl
    :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.861111em;
  }
  .prose-xl
    :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
  }
  .prose-xl
    :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: 1.11111em;
    padding-inline-end: 1.33333em;
    padding-bottom: 1.11111em;
    border-radius: 0.5rem;
    margin-top: 2em;
    margin-bottom: 2em;
    padding-inline-start: 1.33333em;
    font-size: 0.9em;
    line-height: 1.77778;
  }
  .prose-xl
    :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-xl
    :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-inline-start: 1.6em;
  }
  .prose-xl
    :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.6em;
    margin-bottom: 0.6em;
  }
  .prose-xl
    :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-xl
    :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.4em;
  }
  .prose-xl
    :where(.prose-xl > ul > li p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }
  .prose-xl
    :where(.prose-xl > ul > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.2em;
  }
  .prose-xl
    :where(.prose-xl > ul > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.2em;
  }
  .prose-xl
    :where(.prose-xl > ol > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.2em;
  }
  .prose-xl
    :where(.prose-xl > ol > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.2em;
  }
  .prose-xl
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }
  .prose-xl
    :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  .prose-xl
    :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.2em;
  }
  .prose-xl
    :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.6em;
    padding-inline-start: 1.6em;
  }
  .prose-xl
    :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2.8em;
    margin-bottom: 2.8em;
  }
  .prose-xl
    :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-xl
    :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-xl
    :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-xl
    :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .prose-xl
    :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.55556;
  }
  .prose-xl
    :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 0.666667em;
    padding-bottom: 0.888889em;
    padding-inline-start: 0.666667em;
  }
  .prose-xl
    :where(thead th:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose-xl
    :where(thead th:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose-xl
    :where(tbody td, tfoot td):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-top: 0.888889em;
    padding-inline-end: 0.666667em;
    padding-bottom: 0.888889em;
    padding-inline-start: 0.666667em;
  }
  .prose-xl
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose-xl
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose-xl
    :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose-xl
    :where(figure > *):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose-xl
    :where(figcaption):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1em;
    font-size: 0.9em;
    line-height: 1.55556;
  }
  .prose-xl
    :where(.prose-xl > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
  }
  .prose-xl
    :where(.prose-xl > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 0;
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .box-border {
    box-sizing: border-box;
  }
  .box-content {
    box-sizing: content-box;
  }
  .form-checkbox {
    appearance: none;
    print-color-adjust: exact;
    vertical-align: middle;
    -webkit-user-select: none;
    user-select: none;
    width: 1rem;
    height: 1rem;
    color: oklch(0.546 0.245 262.881);
    border-color: oklch(0.551 0.027 264.364);
    --tw-shadow: 0 0 #0000;
    background-color: #fff;
    background-origin: border-box;
    border-width: 1px;
    border-radius: 0;
    flex-shrink: 0;
    padding: 0;
    display: inline-block;
  }
  .form-checkbox:focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty,);
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(0.546 0.245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
      calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow);
    outline: 2px solid #0000;
  }
  .form-checkbox:checked {
    background-color: currentColor;
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
    background-position: 50%;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    border-color: #0000;
  }
  @media (forced-colors: active) {
    .form-checkbox:checked {
      appearance: auto;
    }
  }
  .form-checkbox:checked:hover,
  .form-checkbox:checked:focus {
    background-color: currentColor;
    border-color: #0000;
  }
  .form-checkbox:indeterminate {
    background-color: currentColor;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
    background-position: 50%;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    border-color: #0000;
  }
  @media (forced-colors: active) {
    .form-checkbox:indeterminate {
      appearance: auto;
    }
  }
  .form-checkbox:indeterminate:hover,
  .form-checkbox:indeterminate:focus {
    background-color: currentColor;
    border-color: #0000;
  }
  .form-input {
    appearance: none;
    border-color: oklch(0.551 0.027 264.364);
    --tw-shadow: 0 0 #0000;
    background-color: #fff;
    border-width: 1px;
    border-radius: 0;
    padding: 0.5rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5rem;
  }
  .form-input:focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty,);
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(0.546 0.245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow);
    border-color: oklch(0.546 0.245 262.881);
    outline: 2px solid #0000;
  }
  .form-input::placeholder {
    color: oklch(0.551 0.027 264.364);
    opacity: 1;
  }
  .form-input::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  .form-input::-webkit-date-and-time-value {
    min-height: 1.5em;
  }
  .form-input::-webkit-date-and-time-value {
    text-align: inherit;
  }
  .form-input::-webkit-datetime-edit {
    display: inline-flex;
  }
  .form-input::-webkit-datetime-edit {
    padding-top: 0;
    padding-bottom: 0;
  }
  .form-input::-webkit-datetime-edit-year-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  .form-input::-webkit-datetime-edit-month-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  .form-input::-webkit-datetime-edit-day-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  .form-input::-webkit-datetime-edit-hour-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  .form-input::-webkit-datetime-edit-minute-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  .form-input::-webkit-datetime-edit-second-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  .form-input::-webkit-datetime-edit-millisecond-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  .form-input::-webkit-datetime-edit-meridiem-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  .form-radio {
    appearance: none;
    print-color-adjust: exact;
    vertical-align: middle;
    -webkit-user-select: none;
    user-select: none;
    width: 1rem;
    height: 1rem;
    color: oklch(0.546 0.245 262.881);
    border-color: oklch(0.551 0.027 264.364);
    --tw-shadow: 0 0 #0000;
    background-color: #fff;
    background-origin: border-box;
    border-width: 1px;
    border-radius: 100%;
    flex-shrink: 0;
    padding: 0;
    display: inline-block;
  }
  .form-radio:focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty,);
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(0.546 0.245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
      calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow);
    outline: 2px solid #0000;
  }
  .form-radio:checked {
    background-color: currentColor;
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
    background-position: 50%;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    border-color: #0000;
  }
  @media (forced-colors: active) {
    .form-radio:checked {
      appearance: auto;
    }
  }
  .form-radio:checked:hover,
  .form-radio:checked:focus {
    background-color: currentColor;
    border-color: #0000;
  }
  .line-clamp-none {
    -webkit-line-clamp: unset;
    -webkit-box-orient: horizontal;
    display: block;
    overflow: visible;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .flow-root {
    display: flow-root;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .inline-grid {
    display: inline-grid;
  }
  .inline-table {
    display: inline-table;
  }
  .list-item {
    display: list-item;
  }
  .table {
    display: table;
  }
  .table-caption {
    display: table-caption;
  }
  .table-cell {
    display: table-cell;
  }
  .table-column {
    display: table-column;
  }
  .table-column-group {
    display: table-column-group;
  }
  .table-footer-group {
    display: table-footer-group;
  }
  .table-header-group {
    display: table-header-group;
  }
  .table-row {
    display: table-row;
  }
  .table-row-group {
    display: table-row-group;
  }
  .field-sizing-content {
    field-sizing: content;
  }
  .field-sizing-fixed {
    field-sizing: fixed;
  }
  .aspect-auto {
    aspect-ratio: auto;
  }
  .aspect-square {
    aspect-ratio: 1;
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-none {
    max-height: none;
  }
  .max-h-screen {
    max-height: 100vh;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-1\/2 {
    width: 50%;
  }
  .w-72 {
    width: calc(var(--spacing) * 72);
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-none {
    max-width: none;
  }
  .max-w-screen {
    max-width: 100vw;
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .min-w-screen {
    min-width: 100vw;
  }
  .flex-auto {
    flex: auto;
  }
  .flex-initial {
    flex: 0 auto;
  }
  .flex-none {
    flex: none;
  }
  .flex-shrink,
  .shrink {
    flex-shrink: 1;
  }
  .flex-grow,
  .grow {
    flex-grow: 1;
  }
  .basis-auto {
    flex-basis: auto;
  }
  .basis-full {
    flex-basis: 100%;
  }
  .table-auto {
    table-layout: auto;
  }
  .table-fixed {
    table-layout: fixed;
  }
  .caption-bottom {
    caption-side: bottom;
  }
  .caption-top {
    caption-side: top;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .border-separate {
    border-collapse: separate;
  }
  .origin-bottom {
    transform-origin: bottom;
  }
  .origin-bottom-left {
    transform-origin: 0 100%;
  }
  .origin-bottom-right {
    transform-origin: 100% 100%;
  }
  .origin-center {
    transform-origin: 50%;
  }
  .origin-left {
    transform-origin: 0;
  }
  .origin-right {
    transform-origin: 100%;
  }
  .origin-top {
    transform-origin: top;
  }
  .origin-top-left {
    transform-origin: 0 0;
  }
  .origin-top-right {
    transform-origin: 100% 0;
  }
  .-translate-full {
    --tw-translate-x: -100%;
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-full {
    --tw-translate-x: 100%;
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-z-px {
    --tw-translate-z: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
  }
  .translate-3d {
    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
  }
  .translate-none {
    translate: none;
  }
  .translate-z-px {
    --tw-translate-z: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
  }
  .scale-3d {
    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);
  }
  .scale-none {
    scale: none;
  }
  .rotate-none {
    rotate: none;
  }
  .transform,
  .transform-cpu {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
      var(--tw-skew-x) var(--tw-skew-y);
  }
  .transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x) var(--tw-rotate-y)
      var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .transform-none {
    transform: none;
  }
  .animate-none {
    animation: none;
  }
  .touch-pinch-zoom {
    --tw-pinch-zoom: pinch-zoom;
    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .resize-x {
    resize: horizontal;
  }
  .resize-y {
    resize: vertical;
  }
  .snap-none {
    scroll-snap-type: none;
  }
  .snap-mandatory {
    --tw-scroll-snap-strictness: mandatory;
  }
  .snap-proximity {
    --tw-scroll-snap-strictness: proximity;
  }
  .snap-align-none {
    scroll-snap-align: none;
  }
  .snap-center {
    scroll-snap-align: center;
  }
  .snap-end {
    scroll-snap-align: end;
  }
  .snap-start {
    scroll-snap-align: start;
  }
  .snap-always {
    scroll-snap-stop: always;
  }
  .snap-normal {
    scroll-snap-stop: normal;
  }
  .list-inside {
    list-style-position: inside;
  }
  .list-outside {
    list-style-position: outside;
  }
  .list-decimal {
    list-style-type: decimal;
  }
  .list-disc {
    list-style-type: disc;
  }
  .list-none {
    list-style-type: none;
  }
  .list-image-none {
    list-style-image: none;
  }
  .form-select {
    appearance: none;
    border-color: oklch(0.551 0.027 264.364);
    --tw-shadow: 0 0 #0000;
    print-color-adjust: exact;
    background-color: #fff;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='oklch(0.551 0.027 264.364)' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    border-width: 1px;
    border-radius: 0;
    padding: 0.5rem 2.5rem 0.5rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5rem;
  }
  .form-select:focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty,);
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(0.546 0.245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow);
    border-color: oklch(0.546 0.245 262.881);
    outline: 2px solid #0000;
  }
  .form-select:where([size]:not([size="1"])) {
    background-image: initial;
    background-position: initial;
    background-repeat: unset;
    background-size: initial;
    print-color-adjust: unset;
    padding-right: 0.75rem;
  }
  .form-textarea {
    appearance: none;
    border-color: oklch(0.551 0.027 264.364);
    --tw-shadow: 0 0 #0000;
    background-color: #fff;
    border-width: 1px;
    border-radius: 0;
    padding: 0.5rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5rem;
  }
  .form-textarea:focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty,);
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(0.546 0.245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow);
    border-color: oklch(0.546 0.245 262.881);
    outline: 2px solid #0000;
  }
  .form-textarea::placeholder {
    color: oklch(0.551 0.027 264.364);
    opacity: 1;
  }
  .form-multiselect {
    appearance: none;
    border-color: oklch(0.551 0.027 264.364);
    --tw-shadow: 0 0 #0000;
    background-color: #fff;
    border-width: 1px;
    border-radius: 0;
    padding: 0.5rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5rem;
  }
  .form-multiselect:focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty,);
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(0.546 0.245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow);
    border-color: oklch(0.546 0.245 262.881);
    outline: 2px solid #0000;
  }
  .appearance-auto {
    appearance: auto;
  }
  .appearance-none {
    appearance: none;
  }
  .columns-auto {
    columns: auto;
  }
  .auto-cols-auto {
    grid-auto-columns: auto;
  }
  .auto-cols-fr {
    grid-auto-columns: minmax(0, 1fr);
  }
  .auto-cols-max {
    grid-auto-columns: max-content;
  }
  .auto-cols-min {
    grid-auto-columns: min-content;
  }
  .grid-flow-col {
    grid-auto-flow: column;
  }
  .grid-flow-col-dense {
    grid-auto-flow: column dense;
  }
  .grid-flow-dense {
    grid-auto-flow: dense;
  }
  .grid-flow-row {
    grid-auto-flow: row;
  }
  .grid-flow-row-dense {
    grid-auto-flow: dense;
  }
  .auto-rows-auto {
    grid-auto-rows: auto;
  }
  .auto-rows-fr {
    grid-auto-rows: minmax(0, 1fr);
  }
  .auto-rows-max {
    grid-auto-rows: max-content;
  }
  .auto-rows-min {
    grid-auto-rows: min-content;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .grid-cols-none {
    grid-template-columns: none;
  }
  .grid-cols-subgrid {
    grid-template-columns: subgrid;
  }
  .grid-rows-none {
    grid-template-rows: none;
  }
  .grid-rows-subgrid {
    grid-template-rows: subgrid;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .flex-wrap-reverse {
    flex-wrap: wrap-reverse;
  }
  .place-content-around {
    place-content: space-around;
  }
  .place-content-baseline {
    place-content: baseline start;
  }
  .place-content-between {
    place-content: space-between;
  }
  .place-content-center {
    place-content: center;
  }
  .place-content-end {
    place-content: end;
  }
  .place-content-evenly {
    place-content: space-evenly;
  }
  .place-content-start {
    place-content: start;
  }
  .place-content-stretch {
    place-content: stretch;
  }
  .place-items-baseline {
    place-items: baseline;
  }
  .place-items-center {
    place-items: center;
  }
  .place-items-end {
    place-items: end;
  }
  .place-items-start {
    place-items: start;
  }
  .place-items-stretch {
    place-items: stretch stretch;
  }
  .content-around {
    align-content: space-around;
  }
  .content-baseline {
    align-content: baseline;
  }
  .content-between {
    align-content: space-between;
  }
  .content-center {
    align-content: center;
  }
  .content-end {
    align-content: flex-end;
  }
  .content-evenly {
    align-content: space-evenly;
  }
  .content-normal {
    align-content: normal;
  }
  .content-start {
    align-content: flex-start;
  }
  .content-stretch {
    align-content: stretch;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-baseline {
    justify-content: baseline;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-evenly {
    justify-content: space-evenly;
  }
  .justify-normal {
    justify-content: normal;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .justify-stretch {
    justify-content: stretch;
  }
  .justify-items-center {
    justify-items: center;
  }
  .justify-items-end {
    justify-items: end;
  }
  .justify-items-normal {
    justify-items: normal;
  }
  .justify-items-start {
    justify-items: start;
  }
  .justify-items-stretch {
    justify-items: stretch;
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  :where(.space-y-reverse > :not(:last-child)) {
    --tw-space-y-reverse: 1;
  }
  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 4) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  :where(.space-x-reverse > :not(:last-child)) {
    --tw-space-x-reverse: 1;
  }
  :where(.divide-x > :not(:last-child)) {
    --tw-divide-x-reverse: 0;
    border-inline-style: var(--tw-border-style);
    border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
    border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
  }
  :where(.divide-y > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
  :where(.divide-y-reverse > :not(:last-child)) {
    --tw-divide-y-reverse: 1;
  }
  .place-self-auto {
    place-self: auto;
  }
  .place-self-center {
    place-self: center;
  }
  .place-self-end {
    place-self: end;
  }
  .place-self-start {
    place-self: start;
  }
  .place-self-stretch {
    place-self: stretch stretch;
  }
  .self-auto {
    align-self: auto;
  }
  .self-baseline {
    align-self: baseline;
  }
  .self-center {
    align-self: center;
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .self-stretch {
    align-self: stretch;
  }
  .justify-self-auto {
    justify-self: auto;
  }
  .justify-self-center {
    justify-self: center;
  }
  .justify-self-end {
    justify-self: flex-end;
  }
  .justify-self-start {
    justify-self: flex-start;
  }
  .justify-self-stretch {
    justify-self: stretch;
  }
  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
  .scroll-auto {
    scroll-behavior: auto;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: 3.40282e38px;
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-s {
    border-start-start-radius: 0.25rem;
    border-end-start-radius: 0.25rem;
  }
  .rounded-ss {
    border-start-start-radius: 0.25rem;
  }
  .rounded-e {
    border-start-end-radius: 0.25rem;
    border-end-end-radius: 0.25rem;
  }
  .rounded-se {
    border-start-end-radius: 0.25rem;
  }
  .rounded-ee {
    border-end-end-radius: 0.25rem;
  }
  .rounded-es {
    border-end-start-radius: 0.25rem;
  }
  .rounded-l {
    border-top-left-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .rounded-t {
    border-top-left-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
  }
  .rounded-tl {
    border-top-left-radius: 0.25rem;
  }
  .rounded-r {
    border-top-right-radius: 0.25rem;
    border-bottom-right-radius: 0.25rem;
  }
  .rounded-tr {
    border-top-right-radius: 0.25rem;
  }
  .rounded-b {
    border-bottom-right-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .rounded-br {
    border-bottom-right-radius: 0.25rem;
  }
  .rounded-bl {
    border-bottom-left-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-x {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 1px;
  }
  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }
  .border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
  }
  .border-e {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-dotted {
    --tw-border-style: dotted;
    border-style: dotted;
  }
  .border-double {
    --tw-border-style: double;
    border-style: double;
  }
  .border-hidden {
    --tw-border-style: hidden;
    border-style: hidden;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-transparent {
    border-color: #0000;
  }
  .bg-\(--my_variable\) {
    background-color: var(--my_variable);
  }
  .bg-\(color\:--my-color\) {
    background-color: var(--my-color);
  }
  .bg-\[\#0088cc\] {
    background-color: #08c;
  }
  .bg-\[color\:var\(--my-color\)\] {
    background-color: var(--my-color);
  }
  .bg-\[var\(--my_variable\)\] {
    background-color: var(--my_variable);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-500\/50,
  .bg-red-500\/\[50\%\] {
    background-color: color-mix(
      in oklab,
      var(--color-red-500) 50%,
      transparent
    );
  }
  .-bg-conic,
  .bg-conic {
    --tw-gradient-position: in oklab;
    background-image: conic-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-radial {
    --tw-gradient-position: in oklab;
    background-image: radial-gradient(var(--tw-gradient-stops));
  }
  .bg-none {
    background-image: none;
  }
  .via-none {
    --tw-gradient-via-stops: initial;
  }
  .from-blue-500 {
    --tw-gradient-from: var(--color-blue-500);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position,) var(--tw-gradient-from)
        var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-green-500 {
    --tw-gradient-to: var(--color-green-500);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position,) var(--tw-gradient-from)
        var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .box-decoration-clone {
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
  }
  .box-decoration-slice {
    -webkit-box-decoration-break: slice;
    box-decoration-break: slice;
  }
  .decoration-clone {
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
  }
  .decoration-slice {
    -webkit-box-decoration-break: slice;
    box-decoration-break: slice;
  }
  .bg-auto {
    background-size: auto;
  }
  .bg-contain {
    background-size: contain;
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-fixed {
    background-attachment: fixed;
  }
  .bg-local {
    background-attachment: local;
  }
  .bg-scroll {
    background-attachment: scroll;
  }
  .bg-clip-border {
    background-clip: border-box;
  }
  .bg-clip-content {
    background-clip: content-box;
  }
  .bg-clip-padding {
    background-clip: padding-box;
  }
  .bg-clip-text {
    -webkit-background-clip: text;
    background-clip: text;
  }
  .bg-bottom {
    background-position: bottom;
  }
  .bg-center {
    background-position: 50%;
  }
  .bg-left {
    background-position: 0;
  }
  .bg-left-bottom {
    background-position: 0 100%;
  }
  .bg-left-top {
    background-position: 0 0;
  }
  .bg-right {
    background-position: 100%;
  }
  .bg-right-bottom {
    background-position: 100% 100%;
  }
  .bg-right-top {
    background-position: 100% 0;
  }
  .bg-top {
    background-position: top;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .bg-repeat {
    background-repeat: repeat;
  }
  .bg-repeat-round {
    background-repeat: round;
  }
  .bg-repeat-space {
    background-repeat: space;
  }
  .bg-repeat-x {
    background-repeat: repeat-x;
  }
  .bg-repeat-y {
    background-repeat: repeat-y;
  }
  .bg-origin-border {
    background-origin: border-box;
  }
  .bg-origin-content {
    background-origin: content-box;
  }
  .bg-origin-padding {
    background-origin: padding-box;
  }
  .fill-none {
    fill: none;
  }
  .stroke-none {
    stroke: none;
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .object-fill {
    object-fit: fill;
  }
  .object-none {
    object-fit: none;
  }
  .object-scale-down {
    object-fit: scale-down;
  }
  .object-bottom {
    object-position: bottom;
  }
  .object-center {
    object-position: center;
  }
  .object-left {
    object-position: left;
  }
  .object-left-bottom {
    object-position: left bottom;
  }
  .object-left-top {
    object-position: left top;
  }
  .object-right {
    object-position: right;
  }
  .object-right-bottom {
    object-position: right bottom;
  }
  .object-right-top {
    object-position: right top;
  }
  .object-top {
    object-position: top;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .px-0\.5 {
    padding-inline: calc(var(--spacing) * 0.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .pl-0\.5 {
    padding-left: calc(var(--spacing) * 0.5);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-justify {
    text-align: justify;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .text-start {
    text-align: start;
  }
  .align-baseline {
    vertical-align: baseline;
  }
  .align-bottom {
    vertical-align: bottom;
  }
  .align-middle {
    vertical-align: middle;
  }
  .align-sub {
    vertical-align: sub;
  }
  .align-super {
    vertical-align: super;
  }
  .align-text-bottom {
    vertical-align: text-bottom;
  }
  .align-text-top {
    vertical-align: text-top;
  }
  .align-top {
    vertical-align: top;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-pretty {
    text-wrap: pretty;
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .break-normal {
    overflow-wrap: normal;
    word-break: normal;
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .break-all {
    word-break: break-all;
  }
  .break-keep {
    word-break: keep-all;
  }
  .overflow-ellipsis {
    text-overflow: ellipsis;
  }
  .text-clip {
    text-overflow: clip;
  }
  .text-ellipsis {
    text-overflow: ellipsis;
  }
  .hyphens-auto {
    -webkit-hyphens: auto;
    hyphens: auto;
  }
  .hyphens-manual {
    -webkit-hyphens: manual;
    hyphens: manual;
  }
  .hyphens-none {
    -webkit-hyphens: none;
    hyphens: none;
  }
  .whitespace-break-spaces {
    white-space: break-spaces;
  }
  .whitespace-normal {
    white-space: normal;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre {
    white-space: pre;
  }
  .whitespace-pre-line {
    white-space: pre-line;
  }
  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }
  .\[color\:red\] {
    color: red;
  }
  .\[color\:red\]\/50 {
    color: oklab(62.7955% 0.224863 0.125846/0.5);
  }
  .\[color\:red\]\/50\! {
    color: oklab(62.7955% 0.224863 0.125846/0.5) !important;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-indigo-600 {
    color: var(--color-indigo-600);
  }
  .text-pink-500 {
    color: var(--color-pink-500);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .normal-case {
    text-transform: none;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .not-italic {
    font-style: normal;
  }
  .font-stretch-condensed {
    font-stretch: 75%;
  }
  .font-stretch-expanded {
    font-stretch: 125%;
  }
  .font-stretch-extra-condensed {
    font-stretch: 62.5%;
  }
  .font-stretch-extra-expanded {
    font-stretch: 150%;
  }
  .font-stretch-normal {
    font-stretch: 100%;
  }
  .font-stretch-semi-condensed {
    font-stretch: 87.5%;
  }
  .font-stretch-semi-expanded {
    font-stretch: 112.5%;
  }
  .font-stretch-ultra-condensed {
    font-stretch: 50%;
  }
  .font-stretch-ultra-expanded {
    font-stretch: 200%;
  }
  .diagonal-fractions {
    --tw-numeric-fraction: diagonal-fractions;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
      var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
      var(--tw-numeric-fraction,);
  }
  .lining-nums {
    --tw-numeric-figure: lining-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
      var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
      var(--tw-numeric-fraction,);
  }
  .normal-nums {
    font-variant-numeric: normal;
  }
  .oldstyle-nums {
    --tw-numeric-figure: oldstyle-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
      var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
      var(--tw-numeric-fraction,);
  }
  .ordinal {
    --tw-ordinal: ordinal;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
      var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
      var(--tw-numeric-fraction,);
  }
  .proportional-nums {
    --tw-numeric-spacing: proportional-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
      var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
      var(--tw-numeric-fraction,);
  }
  .slashed-zero {
    --tw-slashed-zero: slashed-zero;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
      var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
      var(--tw-numeric-fraction,);
  }
  .stacked-fractions {
    --tw-numeric-fraction: stacked-fractions;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
      var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
      var(--tw-numeric-fraction,);
  }
  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
      var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
      var(--tw-numeric-fraction,);
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .no-underline {
    text-decoration-line: none;
  }
  .overline {
    text-decoration-line: overline;
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-dashed {
    text-decoration-style: dashed;
  }
  .decoration-dotted {
    text-decoration-style: dotted;
  }
  .decoration-double {
    text-decoration-style: double;
  }
  .decoration-solid {
    text-decoration-style: solid;
  }
  .decoration-wavy {
    text-decoration-style: wavy;
  }
  .decoration-auto {
    text-decoration-thickness: auto;
  }
  .decoration-from-font {
    text-decoration-thickness: from-font;
  }
  .underline-offset-auto {
    text-underline-offset: auto;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .subpixel-antialiased {
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
  }
  .accent-auto {
    accent-color: auto;
  }
  .scheme-dark {
    color-scheme: dark;
  }
  .scheme-light {
    color-scheme: light;
  }
  .scheme-light-dark {
    color-scheme: light dark;
  }
  .scheme-normal {
    color-scheme: normal;
  }
  .scheme-only-dark {
    color-scheme: dark only;
  }
  .scheme-only-light {
    color-scheme: light only;
  }
  .mix-blend-plus-darker {
    mix-blend-mode: plus-darker;
  }
  .mix-blend-plus-lighter {
    mix-blend-mode: plus-lighter;
  }
  .inset-ring {
    --tw-inset-ring-shadow: inset 0 0 0 1px
      var(--tw-inset-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow,
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a),
      0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-initial {
    --tw-shadow-color: initial;
  }
  .inset-shadow-initial {
    --tw-inset-shadow-color: initial;
  }
  .outline-hidden {
    outline-style: none;
  }
  @media (forced-colors: active) {
    .outline-hidden {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-none {
    --tw-blur: ;
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .drop-shadow {
    --tw-drop-shadow: drop-shadow(0 1px 2px #0000001a)
      drop-shadow(0 1px 1px #0000000f);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .drop-shadow-none {
    --tw-drop-shadow: ;
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .sepia {
    --tw-sepia: sepia(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .\!filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,) !important;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur {
    --tw-backdrop-blur: blur(8px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-none {
    --tw-backdrop-blur: ;
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .backdrop-grayscale {
    --tw-backdrop-grayscale: grayscale(100%);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .backdrop-invert {
    --tw-backdrop-invert: invert(100%);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .backdrop-sepia {
    --tw-backdrop-sepia: sepia(100%);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property:
      color,
      background-color,
      border-color,
      outline-color,
      text-decoration-color,
      fill,
      stroke,
      --tw-gradient-from,
      --tw-gradient-via,
      --tw-gradient-to,
      opacity,
      box-shadow,
      transform,
      translate,
      scale,
      rotate,
      filter,
      -webkit-backdrop-filter,
      backdrop-filter;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-none {
    transition-property: none;
  }
  .transition-discrete {
    transition-behavior: allow-discrete;
  }
  .transition-normal {
    transition-behavior: normal;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-linear {
    --tw-ease: linear;
    transition-timing-function: linear;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .will-change-auto {
    will-change: auto;
  }
  .will-change-contents {
    will-change: contents;
  }
  .will-change-scroll {
    will-change: scroll-position;
  }
  .will-change-transform {
    will-change: transform;
  }
  .contain-content {
    contain: content;
  }
  .contain-inline-size {
    --tw-contain-size: inline-size;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,)
      var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-layout {
    --tw-contain-layout: layout;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,)
      var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-none {
    contain: none;
  }
  .contain-paint {
    --tw-contain-paint: paint;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,)
      var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-size {
    --tw-contain-size: size;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,)
      var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-strict {
    contain: strict;
  }
  .contain-style {
    --tw-contain-style: style;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,)
      var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .content-none {
    --tw-content: none;
    content: none;
  }
  .forced-color-adjust-auto {
    forced-color-adjust: auto;
  }
  .forced-color-adjust-none {
    forced-color-adjust: none;
  }
  .backface-hidden {
    backface-visibility: hidden;
  }
  .backface-visible {
    backface-visibility: visible;
  }
  :where(.divide-x-reverse > :not(:last-child)) {
    --tw-divide-x-reverse: 1;
  }
  .duration-initial {
    --tw-duration: initial;
  }
  .ease-initial {
    --tw-ease: initial;
  }
  .outline-dashed {
    --tw-outline-style: dashed;
    outline-style: dashed;
  }
  .outline-dotted {
    --tw-outline-style: dotted;
    outline-style: dotted;
  }
  .outline-double {
    --tw-outline-style: double;
    outline-style: double;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .outline-solid {
    --tw-outline-style: solid;
    outline-style: solid;
  }
  .perspective-none {
    perspective: none;
  }
  .perspective-origin-bottom {
    perspective-origin: bottom;
  }
  .perspective-origin-bottom-left {
    perspective-origin: 0 100%;
  }
  .perspective-origin-bottom-right {
    perspective-origin: 100% 100%;
  }
  .perspective-origin-center {
    perspective-origin: 50%;
  }
  .perspective-origin-left {
    perspective-origin: 0;
  }
  .perspective-origin-right {
    perspective-origin: 100%;
  }
  .perspective-origin-top {
    perspective-origin: top;
  }
  .perspective-origin-top-left {
    perspective-origin: 0 0;
  }
  .perspective-origin-top-right {
    perspective-origin: 100% 0;
  }
  .prose-gray {
    --tw-prose-body: oklch(0.373 0.034 259.733);
    --tw-prose-headings: oklch(0.21 0.034 264.665);
    --tw-prose-lead: oklch(0.446 0.03 256.802);
    --tw-prose-links: oklch(0.21 0.034 264.665);
    --tw-prose-bold: oklch(0.21 0.034 264.665);
    --tw-prose-counters: oklch(0.551 0.027 264.364);
    --tw-prose-bullets: oklch(0.872 0.01 258.338);
    --tw-prose-hr: oklch(0.928 0.006 264.531);
    --tw-prose-quotes: oklch(0.21 0.034 264.665);
    --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
    --tw-prose-captions: oklch(0.551 0.027 264.364);
    --tw-prose-kbd: oklch(0.21 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.21 0.034 264.665);
    --tw-prose-pre-code: oklch(0.928 0.006 264.531);
    --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
    --tw-prose-th-borders: oklch(0.872 0.01 258.338);
    --tw-prose-td-borders: oklch(0.928 0.006 264.531);
    --tw-prose-invert-body: oklch(0.872 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
    --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
    --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
    --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
    --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
  }
  .prose-invert {
    --tw-prose-body: var(--tw-prose-invert-body);
    --tw-prose-headings: var(--tw-prose-invert-headings);
    --tw-prose-lead: var(--tw-prose-invert-lead);
    --tw-prose-links: var(--tw-prose-invert-links);
    --tw-prose-bold: var(--tw-prose-invert-bold);
    --tw-prose-counters: var(--tw-prose-invert-counters);
    --tw-prose-bullets: var(--tw-prose-invert-bullets);
    --tw-prose-hr: var(--tw-prose-invert-hr);
    --tw-prose-quotes: var(--tw-prose-invert-quotes);
    --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
    --tw-prose-captions: var(--tw-prose-invert-captions);
    --tw-prose-kbd: var(--tw-prose-invert-kbd);
    --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
    --tw-prose-code: var(--tw-prose-invert-code);
    --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
    --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
    --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
    --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
  }
  .prose-neutral {
    --tw-prose-body: oklch(0.371 0 0);
    --tw-prose-headings: oklch(0.205 0 0);
    --tw-prose-lead: oklch(0.439 0 0);
    --tw-prose-links: oklch(0.205 0 0);
    --tw-prose-bold: oklch(0.205 0 0);
    --tw-prose-counters: oklch(0.556 0 0);
    --tw-prose-bullets: oklch(0.87 0 0);
    --tw-prose-hr: oklch(0.922 0 0);
    --tw-prose-quotes: oklch(0.205 0 0);
    --tw-prose-quote-borders: oklch(0.922 0 0);
    --tw-prose-captions: oklch(0.556 0 0);
    --tw-prose-kbd: oklch(0.205 0 0);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.205 0 0);
    --tw-prose-pre-code: oklch(0.922 0 0);
    --tw-prose-pre-bg: oklch(0.269 0 0);
    --tw-prose-th-borders: oklch(0.87 0 0);
    --tw-prose-td-borders: oklch(0.922 0 0);
    --tw-prose-invert-body: oklch(0.87 0 0);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.708 0 0);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.708 0 0);
    --tw-prose-invert-bullets: oklch(0.439 0 0);
    --tw-prose-invert-hr: oklch(0.371 0 0);
    --tw-prose-invert-quotes: oklch(0.97 0 0);
    --tw-prose-invert-quote-borders: oklch(0.371 0 0);
    --tw-prose-invert-captions: oklch(0.708 0 0);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.87 0 0);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(0.439 0 0);
    --tw-prose-invert-td-borders: oklch(0.371 0 0);
  }
  .prose-slate {
    --tw-prose-body: oklch(0.372 0.044 257.287);
    --tw-prose-headings: oklch(0.208 0.042 265.755);
    --tw-prose-lead: oklch(0.446 0.043 257.281);
    --tw-prose-links: oklch(0.208 0.042 265.755);
    --tw-prose-bold: oklch(0.208 0.042 265.755);
    --tw-prose-counters: oklch(0.554 0.046 257.417);
    --tw-prose-bullets: oklch(0.869 0.022 252.894);
    --tw-prose-hr: oklch(0.929 0.013 255.508);
    --tw-prose-quotes: oklch(0.208 0.042 265.755);
    --tw-prose-quote-borders: oklch(0.929 0.013 255.508);
    --tw-prose-captions: oklch(0.554 0.046 257.417);
    --tw-prose-kbd: oklch(0.208 0.042 265.755);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.208 0.042 265.755);
    --tw-prose-pre-code: oklch(0.929 0.013 255.508);
    --tw-prose-pre-bg: oklch(0.279 0.041 260.031);
    --tw-prose-th-borders: oklch(0.869 0.022 252.894);
    --tw-prose-td-borders: oklch(0.929 0.013 255.508);
    --tw-prose-invert-body: oklch(0.869 0.022 252.894);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.704 0.04 256.788);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.704 0.04 256.788);
    --tw-prose-invert-bullets: oklch(0.446 0.043 257.281);
    --tw-prose-invert-hr: oklch(0.372 0.044 257.287);
    --tw-prose-invert-quotes: oklch(0.968 0.007 247.896);
    --tw-prose-invert-quote-borders: oklch(0.372 0.044 257.287);
    --tw-prose-invert-captions: oklch(0.704 0.04 256.788);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.869 0.022 252.894);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(0.446 0.043 257.281);
    --tw-prose-invert-td-borders: oklch(0.372 0.044 257.287);
  }
  .prose-stone {
    --tw-prose-body: oklch(0.374 0.01 67.558);
    --tw-prose-headings: oklch(0.216 0.006 56.043);
    --tw-prose-lead: oklch(0.444 0.011 73.639);
    --tw-prose-links: oklch(0.216 0.006 56.043);
    --tw-prose-bold: oklch(0.216 0.006 56.043);
    --tw-prose-counters: oklch(0.553 0.013 58.071);
    --tw-prose-bullets: oklch(0.869 0.005 56.366);
    --tw-prose-hr: oklch(0.923 0.003 48.717);
    --tw-prose-quotes: oklch(0.216 0.006 56.043);
    --tw-prose-quote-borders: oklch(0.923 0.003 48.717);
    --tw-prose-captions: oklch(0.553 0.013 58.071);
    --tw-prose-kbd: oklch(0.216 0.006 56.043);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.216 0.006 56.043);
    --tw-prose-pre-code: oklch(0.923 0.003 48.717);
    --tw-prose-pre-bg: oklch(0.268 0.007 34.298);
    --tw-prose-th-borders: oklch(0.869 0.005 56.366);
    --tw-prose-td-borders: oklch(0.923 0.003 48.717);
    --tw-prose-invert-body: oklch(0.869 0.005 56.366);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.709 0.01 56.259);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.709 0.01 56.259);
    --tw-prose-invert-bullets: oklch(0.444 0.011 73.639);
    --tw-prose-invert-hr: oklch(0.374 0.01 67.558);
    --tw-prose-invert-quotes: oklch(0.97 0.001 106.424);
    --tw-prose-invert-quote-borders: oklch(0.374 0.01 67.558);
    --tw-prose-invert-captions: oklch(0.709 0.01 56.259);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.869 0.005 56.366);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(0.444 0.011 73.639);
    --tw-prose-invert-td-borders: oklch(0.374 0.01 67.558);
  }
  .prose-zinc {
    --tw-prose-body: oklch(0.37 0.013 285.805);
    --tw-prose-headings: oklch(0.21 0.006 285.885);
    --tw-prose-lead: oklch(0.442 0.017 285.786);
    --tw-prose-links: oklch(0.21 0.006 285.885);
    --tw-prose-bold: oklch(0.21 0.006 285.885);
    --tw-prose-counters: oklch(0.552 0.016 285.938);
    --tw-prose-bullets: oklch(0.871 0.006 286.286);
    --tw-prose-hr: oklch(0.92 0.004 286.32);
    --tw-prose-quotes: oklch(0.21 0.006 285.885);
    --tw-prose-quote-borders: oklch(0.92 0.004 286.32);
    --tw-prose-captions: oklch(0.552 0.016 285.938);
    --tw-prose-kbd: oklch(0.21 0.006 285.885);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.21 0.006 285.885);
    --tw-prose-pre-code: oklch(0.92 0.004 286.32);
    --tw-prose-pre-bg: oklch(0.274 0.006 286.033);
    --tw-prose-th-borders: oklch(0.871 0.006 286.286);
    --tw-prose-td-borders: oklch(0.92 0.004 286.32);
    --tw-prose-invert-body: oklch(0.871 0.006 286.286);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.705 0.015 286.067);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.705 0.015 286.067);
    --tw-prose-invert-bullets: oklch(0.442 0.017 285.786);
    --tw-prose-invert-hr: oklch(0.37 0.013 285.805);
    --tw-prose-invert-quotes: oklch(0.967 0.001 286.375);
    --tw-prose-invert-quote-borders: oklch(0.37 0.013 285.805);
    --tw-prose-invert-captions: oklch(0.705 0.015 286.067);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.871 0.006 286.286);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(0.442 0.017 285.786);
    --tw-prose-invert-td-borders: oklch(0.37 0.013 285.805);
  }
  .ring-inset {
    --tw-ring-inset: inset;
  }
  .transform-3d {
    transform-style: preserve-3d;
  }
  .transform-border {
    transform-box: border-box;
  }
  .transform-content {
    transform-box: content-box;
  }
  .transform-fill {
    transform-box: fill-box;
  }
  .transform-flat {
    transform-style: flat;
  }
  .transform-stroke {
    transform-box: stroke-box;
  }
  .transform-view {
    transform-box: view-box;
  }
  @media (hover: hover) {
    .hover\:prose-lg:hover {
      font-size: 1.125rem;
      line-height: 1.77778;
    }
    .hover\:prose-lg:hover
      :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
    }
    .hover\:prose-lg:hover
      :where([class~="lead"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.09091em;
      margin-bottom: 1.09091em;
      font-size: 1.22222em;
      line-height: 1.45455;
    }
    .hover\:prose-lg:hover
      :where(blockquote):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.66667em;
      margin-bottom: 1.66667em;
      padding-inline-start: 1em;
    }
    .hover\:prose-lg:hover
      :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0.833333em;
      font-size: 2.66667em;
      line-height: 1;
    }
    .hover\:prose-lg:hover
      :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.86667em;
      margin-bottom: 1.06667em;
      font-size: 1.66667em;
      line-height: 1.33333;
    }
    .hover\:prose-lg:hover
      :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.66667em;
      margin-bottom: 0.666667em;
      font-size: 1.33333em;
      line-height: 1.5;
    }
    .hover\:prose-lg:hover
      :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.77778em;
      margin-bottom: 0.444444em;
      line-height: 1.55556;
    }
    .hover\:prose-lg:hover
      :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .hover\:prose-lg:hover
      :where(picture):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .hover\:prose-lg:hover
      :where(picture > img):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .hover\:prose-lg:hover
      :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .hover\:prose-lg:hover
      :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      padding-top: 0.222222em;
      padding-inline-end: 0.444444em;
      padding-bottom: 0.222222em;
      border-radius: 0.3125rem;
      padding-inline-start: 0.444444em;
      font-size: 0.888889em;
    }
    .hover\:prose-lg:hover
      :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      font-size: 0.888889em;
    }
    .hover\:prose-lg:hover
      :where(h2 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      font-size: 0.866667em;
    }
    .hover\:prose-lg:hover
      :where(h3 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      font-size: 0.875em;
    }
    .hover\:prose-lg:hover
      :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      padding-top: 1em;
      padding-inline-end: 1.5em;
      padding-bottom: 1em;
      border-radius: 0.375rem;
      margin-top: 2em;
      margin-bottom: 2em;
      padding-inline-start: 1.5em;
      font-size: 0.888889em;
      line-height: 1.75;
    }
    .hover\:prose-lg:hover
      :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .hover\:prose-lg:hover
      :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
      padding-inline-start: 1.55556em;
    }
    .hover\:prose-lg:hover
      :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.666667em;
      margin-bottom: 0.666667em;
    }
    .hover\:prose-lg:hover
      :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .hover\:prose-lg:hover
      :where(ul > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0.444444em;
    }
    .hover\:prose-lg:hover
      :where(.prose-lg > ul > li p):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.888889em;
      margin-bottom: 0.888889em;
    }
    .hover\:prose-lg:hover
      :where(.prose-lg > ul > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.33333em;
    }
    .hover\:prose-lg:hover
      :where(.prose-lg > ul > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.33333em;
    }
    .hover\:prose-lg:hover
      :where(.prose-lg > ol > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.33333em;
    }
    .hover\:prose-lg:hover
      :where(.prose-lg > ol > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.33333em;
    }
    .hover\:prose-lg:hover
      :where(ul ul, ul ol, ol ul, ol ol):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.888889em;
      margin-bottom: 0.888889em;
    }
    .hover\:prose-lg:hover
      :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
    }
    .hover\:prose-lg:hover
      :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
    }
    .hover\:prose-lg:hover
      :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.666667em;
      padding-inline-start: 1.55556em;
    }
    .hover\:prose-lg:hover
      :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 3.11111em;
      margin-bottom: 3.11111em;
    }
    .hover\:prose-lg:hover
      :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .hover\:prose-lg:hover
      :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .hover\:prose-lg:hover
      :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .hover\:prose-lg:hover
      :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0;
    }
    .hover\:prose-lg:hover
      :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      font-size: 0.888889em;
      line-height: 1.5;
    }
    .hover\:prose-lg:hover
      :where(thead th):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    .hover\:prose-lg:hover
      :where(thead th:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .hover\:prose-lg:hover
      :where(thead th:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .hover\:prose-lg:hover
      :where(tbody td, tfoot td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-top: 0.75em;
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    .hover\:prose-lg:hover
      :where(tbody td:first-child, tfoot td:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .hover\:prose-lg:hover
      :where(tbody td:last-child, tfoot td:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .hover\:prose-lg:hover
      :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .hover\:prose-lg:hover
      :where(figure > *):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .hover\:prose-lg:hover
      :where(figcaption):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1em;
      font-size: 0.888889em;
      line-height: 1.5;
    }
    .hover\:prose-lg:hover
      :where(.prose-lg > :first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
    }
    .hover\:prose-lg:hover
      :where(.prose-lg > :last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 0;
    }
  }
  .focus\:border-black:focus {
    border-color: var(--color-black);
  }
  .focus\:border-gray-300:focus {
    border-color: var(--color-gray-300);
  }
  .focus\:border-gray-500:focus {
    border-color: var(--color-gray-500);
  }
  .focus\:border-indigo-300:focus {
    border-color: var(--color-indigo-300);
  }
  .focus\:border-transparent:focus {
    border-color: #0000;
  }
  .focus\:bg-gray-200:focus {
    background-color: var(--color-gray-200);
  }
  .focus\:bg-white:focus {
    background-color: var(--color-white);
  }
  .focus\:ring:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus\:ring-0:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus\:ring-1:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus\:ring-black:focus {
    --tw-ring-color: var(--color-black);
  }
  .focus\:ring-gray-500:focus {
    --tw-ring-color: var(--color-gray-500);
  }
  .focus\:ring-indigo-200:focus {
    --tw-ring-color: var(--color-indigo-200);
  }
  .focus\:ring-offset-0:focus {
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
  .focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
  @media (width>=40rem) {
    .sm\:prose {
      color: var(--tw-prose-body);
      --tw-prose-body: oklch(0.373 0.034 259.733);
      --tw-prose-headings: oklch(0.21 0.034 264.665);
      --tw-prose-lead: oklch(0.446 0.03 256.802);
      --tw-prose-links: oklch(0.21 0.034 264.665);
      --tw-prose-bold: oklch(0.21 0.034 264.665);
      --tw-prose-counters: oklch(0.551 0.027 264.364);
      --tw-prose-bullets: oklch(0.872 0.01 258.338);
      --tw-prose-hr: oklch(0.928 0.006 264.531);
      --tw-prose-quotes: oklch(0.21 0.034 264.665);
      --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
      --tw-prose-captions: oklch(0.551 0.027 264.364);
      --tw-prose-kbd: oklch(0.21 0.034 264.665);
      --tw-prose-kbd-shadows: NaN NaN NaN;
      --tw-prose-code: oklch(0.21 0.034 264.665);
      --tw-prose-pre-code: oklch(0.928 0.006 264.531);
      --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
      --tw-prose-th-borders: oklch(0.872 0.01 258.338);
      --tw-prose-td-borders: oklch(0.928 0.006 264.531);
      --tw-prose-invert-body: oklch(0.872 0.01 258.338);
      --tw-prose-invert-headings: #fff;
      --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
      --tw-prose-invert-links: #fff;
      --tw-prose-invert-bold: #fff;
      --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
      --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
      --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
      --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
      --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
      --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
      --tw-prose-invert-kbd: #fff;
      --tw-prose-invert-kbd-shadows: 255 255 255;
      --tw-prose-invert-code: #fff;
      --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
      --tw-prose-invert-pre-bg: #00000080;
      --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
      --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
      max-width: 65ch;
      font-size: 1rem;
      line-height: 1.75;
    }
    .sm\:prose
      :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    .sm\:prose
      :where([class~="lead"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: var(--tw-prose-lead);
      margin-top: 1.2em;
      margin-bottom: 1.2em;
      font-size: 1.25em;
      line-height: 1.6;
    }
    .sm\:prose
      :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      font-weight: 500;
      text-decoration: underline;
    }
    .sm\:prose
      :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    .sm\:prose
      :where(a strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ),
    .sm\:prose
      :where(blockquote strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ),
    .sm\:prose
      :where(thead th strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
    }
    .sm\:prose
      :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
      list-style-type: decimal;
    }
    .sm\:prose
      :where(ol[type="A"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: upper-alpha;
    }
    .sm\:prose
      :where(ol[type="a"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: lower-alpha;
    }
    .sm\:prose
      :where(ol[type="A s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: upper-alpha;
    }
    .sm\:prose
      :where(ol[type="a s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: lower-alpha;
    }
    .sm\:prose
      :where(ol[type="I"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: upper-roman;
    }
    .sm\:prose
      :where(ol[type="i"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: lower-roman;
    }
    .sm\:prose
      :where(ol[type="I s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: upper-roman;
    }
    .sm\:prose
      :where(ol[type="i s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: lower-roman;
    }
    .sm\:prose
      :where(ol[type="1"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: decimal;
    }
    .sm\:prose
      :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
      list-style-type: disc;
    }
    .sm\:prose
      :where(ol > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      )::marker {
      color: var(--tw-prose-counters);
      font-weight: 400;
    }
    .sm\:prose
      :where(ul > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      )::marker {
      color: var(--tw-prose-bullets);
    }
    .sm\:prose
      :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      margin-top: 1.25em;
      font-weight: 600;
    }
    .sm\:prose
      :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      border-color: var(--tw-prose-hr);
      border-top-width: 1px;
      margin-top: 3em;
      margin-bottom: 3em;
    }
    .sm\:prose
      :where(blockquote):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: var(--tw-prose-quotes);
      border-inline-start-width: 0.25rem;
      border-inline-start-color: var(--tw-prose-quote-borders);
      quotes: "“" "”" "‘" "’";
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
      font-style: italic;
      font-weight: 500;
    }
    .sm\:prose
      :where(blockquote p:first-of-type):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):before {
      content: open-quote;
    }
    .sm\:prose
      :where(blockquote p:last-of-type):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):after {
      content: close-quote;
    }
    .sm\:prose
      :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      margin-top: 0;
      margin-bottom: 0.888889em;
      font-size: 2.25em;
      font-weight: 800;
      line-height: 1.11111;
    }
    .sm\:prose
      :where(h1 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-weight: 900;
    }
    .sm\:prose
      :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      margin-top: 2em;
      margin-bottom: 1em;
      font-size: 1.5em;
      font-weight: 700;
      line-height: 1.33333;
    }
    .sm\:prose
      :where(h2 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-weight: 800;
    }
    .sm\:prose
      :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      font-size: 1.25em;
      font-weight: 600;
      line-height: 1.6;
    }
    .sm\:prose
      :where(h3 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-weight: 700;
    }
    .sm\:prose
      :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      font-weight: 600;
      line-height: 1.5;
    }
    .sm\:prose
      :where(h4 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-weight: 700;
    }
    .sm\:prose
      :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    .sm\:prose
      :where(picture):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 2em;
      margin-bottom: 2em;
      display: block;
    }
    .sm\:prose
      :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    .sm\:prose
      :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-kbd);
      box-shadow:
        0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
        0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      border-radius: 0.3125rem;
      padding-inline-start: 0.375em;
      font-family: inherit;
      font-size: 0.875em;
      font-weight: 500;
    }
    .sm\:prose
      :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-code);
      font-size: 0.875em;
      font-weight: 600;
    }
    .sm\:prose
      :where(code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):before,
    .sm\:prose
      :where(code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):after {
      content: "`";
    }
    .sm\:prose
      :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .sm\:prose
      :where(h1 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
    }
    .sm\:prose
      :where(h2 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-size: 0.875em;
    }
    .sm\:prose
      :where(h3 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-size: 0.9em;
    }
    .sm\:prose
      :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .sm\:prose
      :where(blockquote code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ),
    .sm\:prose
      :where(thead th code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
    }
    .sm\:prose
      :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      background-color: var(--tw-prose-pre-bg);
      padding-top: 0.857143em;
      padding-inline-end: 1.14286em;
      padding-bottom: 0.857143em;
      border-radius: 0.375rem;
      margin-top: 1.71429em;
      margin-bottom: 1.71429em;
      padding-inline-start: 1.14286em;
      font-size: 0.875em;
      font-weight: 400;
      line-height: 1.71429;
      overflow-x: auto;
    }
    .sm\:prose
      :where(pre code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      font-weight: inherit;
      color: inherit;
      font-size: inherit;
      font-family: inherit;
      line-height: inherit;
      background-color: #0000;
      border-width: 0;
      border-radius: 0;
      padding: 0;
    }
    .sm\:prose
      :where(pre code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):before,
    .sm\:prose
      :where(pre code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):after {
      content: none;
    }
    .sm\:prose
      :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      table-layout: auto;
      width: 100%;
      margin-top: 2em;
      margin-bottom: 2em;
      font-size: 0.875em;
      line-height: 1.71429;
    }
    .sm\:prose
      :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    .sm\:prose
      :where(thead th):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: var(--tw-prose-headings);
      vertical-align: bottom;
      padding-inline-end: 0.571429em;
      padding-bottom: 0.571429em;
      padding-inline-start: 0.571429em;
      font-weight: 600;
    }
    .sm\:prose
      :where(tbody tr):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    .sm\:prose
      :where(tbody tr:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      border-bottom-width: 0;
    }
    .sm\:prose
      :where(tbody td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      vertical-align: baseline;
    }
    .sm\:prose
      :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    .sm\:prose
      :where(tfoot td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      vertical-align: top;
    }
    .sm\:prose
      :where(th, td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      text-align: start;
    }
    .sm\:prose
      :where(figure > *):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .sm\:prose
      :where(figcaption):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: var(--tw-prose-captions);
      margin-top: 0.857143em;
      font-size: 0.875em;
      line-height: 1.42857;
    }
    .sm\:prose
      :where(picture > img):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .sm\:prose
      :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    .sm\:prose
      :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .sm\:prose
      :where(ul > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0.375em;
    }
    .sm\:prose
      :where(.prose > ul > li p):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    .sm\:prose
      :where(.prose > ul > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.25em;
    }
    .sm\:prose
      :where(.prose > ul > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.25em;
    }
    .sm\:prose
      :where(.prose > ol > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.25em;
    }
    .sm\:prose
      :where(.prose > ol > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.25em;
    }
    .sm\:prose
      :where(ul ul, ul ol, ol ul, ol ol):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    .sm\:prose
      :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    .sm\:prose
      :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    .sm\:prose
      :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .sm\:prose
      :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .sm\:prose
      :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .sm\:prose
      :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0;
    }
    .sm\:prose
      :where(thead th:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .sm\:prose
      :where(thead th:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .sm\:prose
      :where(tbody td, tfoot td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-top: 0.571429em;
      padding-inline-end: 0.571429em;
      padding-bottom: 0.571429em;
      padding-inline-start: 0.571429em;
    }
    .sm\:prose
      :where(tbody td:first-child, tfoot td:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .sm\:prose
      :where(tbody td:last-child, tfoot td:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .sm\:prose
      :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    .sm\:prose
      :where(.prose > :first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
    }
    .sm\:prose
      :where(.prose > :last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 0;
    }
  }
  @media (width>=48rem) {
    .md\:prose-lg {
      font-size: 1.125rem;
      line-height: 1.77778;
    }
    .md\:prose-lg
      :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
    }
    .md\:prose-lg
      :where([class~="lead"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.09091em;
      margin-bottom: 1.09091em;
      font-size: 1.22222em;
      line-height: 1.45455;
    }
    .md\:prose-lg
      :where(blockquote):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.66667em;
      margin-bottom: 1.66667em;
      padding-inline-start: 1em;
    }
    .md\:prose-lg
      :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0.833333em;
      font-size: 2.66667em;
      line-height: 1;
    }
    .md\:prose-lg
      :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.86667em;
      margin-bottom: 1.06667em;
      font-size: 1.66667em;
      line-height: 1.33333;
    }
    .md\:prose-lg
      :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.66667em;
      margin-bottom: 0.666667em;
      font-size: 1.33333em;
      line-height: 1.5;
    }
    .md\:prose-lg
      :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.77778em;
      margin-bottom: 0.444444em;
      line-height: 1.55556;
    }
    .md\:prose-lg
      :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .md\:prose-lg
      :where(picture):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .md\:prose-lg
      :where(picture > img):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .md\:prose-lg
      :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .md\:prose-lg
      :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      padding-top: 0.222222em;
      padding-inline-end: 0.444444em;
      padding-bottom: 0.222222em;
      border-radius: 0.3125rem;
      padding-inline-start: 0.444444em;
      font-size: 0.888889em;
    }
    .md\:prose-lg
      :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      font-size: 0.888889em;
    }
    .md\:prose-lg
      :where(h2 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      font-size: 0.866667em;
    }
    .md\:prose-lg
      :where(h3 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      font-size: 0.875em;
    }
    .md\:prose-lg
      :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      padding-top: 1em;
      padding-inline-end: 1.5em;
      padding-bottom: 1em;
      border-radius: 0.375rem;
      margin-top: 2em;
      margin-bottom: 2em;
      padding-inline-start: 1.5em;
      font-size: 0.888889em;
      line-height: 1.75;
    }
    .md\:prose-lg
      :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .md\:prose-lg
      :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
      padding-inline-start: 1.55556em;
    }
    .md\:prose-lg
      :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.666667em;
      margin-bottom: 0.666667em;
    }
    .md\:prose-lg
      :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .md\:prose-lg
      :where(ul > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0.444444em;
    }
    .md\:prose-lg
      :where(.prose-lg > ul > li p):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.888889em;
      margin-bottom: 0.888889em;
    }
    .md\:prose-lg
      :where(.prose-lg > ul > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.33333em;
    }
    .md\:prose-lg
      :where(.prose-lg > ul > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.33333em;
    }
    .md\:prose-lg
      :where(.prose-lg > ol > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.33333em;
    }
    .md\:prose-lg
      :where(.prose-lg > ol > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.33333em;
    }
    .md\:prose-lg
      :where(ul ul, ul ol, ol ul, ol ol):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.888889em;
      margin-bottom: 0.888889em;
    }
    .md\:prose-lg
      :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
    }
    .md\:prose-lg
      :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
    }
    .md\:prose-lg
      :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.666667em;
      padding-inline-start: 1.55556em;
    }
    .md\:prose-lg
      :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 3.11111em;
      margin-bottom: 3.11111em;
    }
    .md\:prose-lg
      :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .md\:prose-lg
      :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .md\:prose-lg
      :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .md\:prose-lg
      :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0;
    }
    .md\:prose-lg
      :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      font-size: 0.888889em;
      line-height: 1.5;
    }
    .md\:prose-lg
      :where(thead th):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    .md\:prose-lg
      :where(thead th:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .md\:prose-lg
      :where(thead th:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .md\:prose-lg
      :where(tbody td, tfoot td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-top: 0.75em;
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    .md\:prose-lg
      :where(tbody td:first-child, tfoot td:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .md\:prose-lg
      :where(tbody td:last-child, tfoot td:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .md\:prose-lg
      :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .md\:prose-lg
      :where(figure > *):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .md\:prose-lg
      :where(figcaption):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1em;
      font-size: 0.888889em;
      line-height: 1.5;
    }
    .md\:prose-lg
      :where(.prose-lg > :first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
    }
    .md\:prose-lg
      :where(.prose-lg > :last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 0;
    }
    .md\:max-w-4xl {
      max-width: var(--container-4xl);
    }
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  @media (width>=64rem) {
    .lg\:prose-lg {
      font-size: 1.125rem;
      line-height: 1.77778;
    }
    .lg\:prose-lg
      :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
    }
    .lg\:prose-lg
      :where([class~="lead"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.09091em;
      margin-bottom: 1.09091em;
      font-size: 1.22222em;
      line-height: 1.45455;
    }
    .lg\:prose-lg
      :where(blockquote):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.66667em;
      margin-bottom: 1.66667em;
      padding-inline-start: 1em;
    }
    .lg\:prose-lg
      :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0.833333em;
      font-size: 2.66667em;
      line-height: 1;
    }
    .lg\:prose-lg
      :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.86667em;
      margin-bottom: 1.06667em;
      font-size: 1.66667em;
      line-height: 1.33333;
    }
    .lg\:prose-lg
      :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.66667em;
      margin-bottom: 0.666667em;
      font-size: 1.33333em;
      line-height: 1.5;
    }
    .lg\:prose-lg
      :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.77778em;
      margin-bottom: 0.444444em;
      line-height: 1.55556;
    }
    .lg\:prose-lg
      :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-lg
      :where(picture):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .lg\:prose-lg
      :where(picture > img):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .lg\:prose-lg
      :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .lg\:prose-lg
      :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      padding-top: 0.222222em;
      padding-inline-end: 0.444444em;
      padding-bottom: 0.222222em;
      border-radius: 0.3125rem;
      padding-inline-start: 0.444444em;
      font-size: 0.888889em;
    }
    .lg\:prose-lg
      :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      font-size: 0.888889em;
    }
    .lg\:prose-lg
      :where(h2 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      font-size: 0.866667em;
    }
    .lg\:prose-lg
      :where(h3 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      font-size: 0.875em;
    }
    .lg\:prose-lg
      :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      padding-top: 1em;
      padding-inline-end: 1.5em;
      padding-bottom: 1em;
      border-radius: 0.375rem;
      margin-top: 2em;
      margin-bottom: 2em;
      padding-inline-start: 1.5em;
      font-size: 0.888889em;
      line-height: 1.75;
    }
    .lg\:prose-lg
      :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-lg
      :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
      padding-inline-start: 1.55556em;
    }
    .lg\:prose-lg
      :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.666667em;
      margin-bottom: 0.666667em;
    }
    .lg\:prose-lg
      :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-lg
      :where(ul > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0.444444em;
    }
    .lg\:prose-lg
      :where(.prose-lg > ul > li p):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.888889em;
      margin-bottom: 0.888889em;
    }
    .lg\:prose-lg
      :where(.prose-lg > ul > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.33333em;
    }
    .lg\:prose-lg
      :where(.prose-lg > ul > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.33333em;
    }
    .lg\:prose-lg
      :where(.prose-lg > ol > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.33333em;
    }
    .lg\:prose-lg
      :where(.prose-lg > ol > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.33333em;
    }
    .lg\:prose-lg
      :where(ul ul, ul ol, ol ul, ol ol):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.888889em;
      margin-bottom: 0.888889em;
    }
    .lg\:prose-lg
      :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
    }
    .lg\:prose-lg
      :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.33333em;
    }
    .lg\:prose-lg
      :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.666667em;
      padding-inline-start: 1.55556em;
    }
    .lg\:prose-lg
      :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 3.11111em;
      margin-bottom: 3.11111em;
    }
    .lg\:prose-lg
      :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-lg
      :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-lg
      :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-lg
      :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0;
    }
    .lg\:prose-lg
      :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      font-size: 0.888889em;
      line-height: 1.5;
    }
    .lg\:prose-lg
      :where(thead th):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    .lg\:prose-lg
      :where(thead th:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .lg\:prose-lg
      :where(thead th:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .lg\:prose-lg
      :where(tbody td, tfoot td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-top: 0.75em;
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    .lg\:prose-lg
      :where(tbody td:first-child, tfoot td:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .lg\:prose-lg
      :where(tbody td:last-child, tfoot td:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .lg\:prose-lg
      :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .lg\:prose-lg
      :where(figure > *):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .lg\:prose-lg
      :where(figcaption):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1em;
      font-size: 0.888889em;
      line-height: 1.5;
    }
    .lg\:prose-lg
      :where(.prose-lg > :first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
    }
    .lg\:prose-lg
      :where(.prose-lg > :last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 0;
    }
    .lg\:prose-xl {
      font-size: 1.25rem;
      line-height: 1.8;
    }
    .lg\:prose-xl
      :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    .lg\:prose-xl
      :where([class~="lead"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1em;
      margin-bottom: 1em;
      font-size: 1.2em;
      line-height: 1.5;
    }
    .lg\:prose-xl
      :where(blockquote):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1.06667em;
    }
    .lg\:prose-xl
      :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0.857143em;
      font-size: 2.8em;
      line-height: 1;
    }
    .lg\:prose-xl
      :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.55556em;
      margin-bottom: 0.888889em;
      font-size: 1.8em;
      line-height: 1.11111;
    }
    .lg\:prose-xl
      :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.6em;
      margin-bottom: 0.666667em;
      font-size: 1.5em;
      line-height: 1.33333;
    }
    .lg\:prose-xl
      :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.8em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    .lg\:prose-xl
      :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-xl
      :where(picture):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    .lg\:prose-xl
      :where(picture > img):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .lg\:prose-xl
      :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    .lg\:prose-xl
      :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      padding-top: 0.25em;
      padding-inline-end: 0.4em;
      padding-bottom: 0.25em;
      border-radius: 0.3125rem;
      padding-inline-start: 0.4em;
      font-size: 0.9em;
    }
    .lg\:prose-xl
      :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      font-size: 0.9em;
    }
    .lg\:prose-xl
      :where(h2 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      font-size: 0.861111em;
    }
    .lg\:prose-xl
      :where(h3 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      font-size: 0.9em;
    }
    .lg\:prose-xl
      :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      padding-top: 1.11111em;
      padding-inline-end: 1.33333em;
      padding-bottom: 1.11111em;
      border-radius: 0.5rem;
      margin-top: 2em;
      margin-bottom: 2em;
      padding-inline-start: 1.33333em;
      font-size: 0.9em;
      line-height: 1.77778;
    }
    .lg\:prose-xl
      :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-xl
      :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
      padding-inline-start: 1.6em;
    }
    .lg\:prose-xl
      :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.6em;
      margin-bottom: 0.6em;
    }
    .lg\:prose-xl
      :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-xl
      :where(ul > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0.4em;
    }
    .lg\:prose-xl
      :where(.prose-xl > ul > li p):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.8em;
      margin-bottom: 0.8em;
    }
    .lg\:prose-xl
      :where(.prose-xl > ul > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.2em;
    }
    .lg\:prose-xl
      :where(.prose-xl > ul > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.2em;
    }
    .lg\:prose-xl
      :where(.prose-xl > ol > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.2em;
    }
    .lg\:prose-xl
      :where(.prose-xl > ol > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.2em;
    }
    .lg\:prose-xl
      :where(ul ul, ul ol, ol ul, ol ol):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.8em;
      margin-bottom: 0.8em;
    }
    .lg\:prose-xl
      :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    .lg\:prose-xl
      :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.2em;
    }
    .lg\:prose-xl
      :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.6em;
      padding-inline-start: 1.6em;
    }
    .lg\:prose-xl
      :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 2.8em;
      margin-bottom: 2.8em;
    }
    .lg\:prose-xl
      :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-xl
      :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-xl
      :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .lg\:prose-xl
      :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0;
    }
    .lg\:prose-xl
      :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      font-size: 0.9em;
      line-height: 1.55556;
    }
    .lg\:prose-xl
      :where(thead th):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0.666667em;
      padding-bottom: 0.888889em;
      padding-inline-start: 0.666667em;
    }
    .lg\:prose-xl
      :where(thead th:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .lg\:prose-xl
      :where(thead th:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .lg\:prose-xl
      :where(tbody td, tfoot td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-top: 0.888889em;
      padding-inline-end: 0.666667em;
      padding-bottom: 0.888889em;
      padding-inline-start: 0.666667em;
    }
    .lg\:prose-xl
      :where(tbody td:first-child, tfoot td:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .lg\:prose-xl
      :where(tbody td:last-child, tfoot td:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .lg\:prose-xl
      :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    .lg\:prose-xl
      :where(figure > *):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .lg\:prose-xl
      :where(figcaption):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1em;
      font-size: 0.9em;
      line-height: 1.55556;
    }
    .lg\:prose-xl
      :where(.prose-xl > :first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
    }
    .lg\:prose-xl
      :where(.prose-xl > :last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 0;
    }
  }
  @media (prefers-color-scheme: dark) {
    .dark\:prose {
      color: var(--tw-prose-body);
      --tw-prose-body: oklch(0.373 0.034 259.733);
      --tw-prose-headings: oklch(0.21 0.034 264.665);
      --tw-prose-lead: oklch(0.446 0.03 256.802);
      --tw-prose-links: oklch(0.21 0.034 264.665);
      --tw-prose-bold: oklch(0.21 0.034 264.665);
      --tw-prose-counters: oklch(0.551 0.027 264.364);
      --tw-prose-bullets: oklch(0.872 0.01 258.338);
      --tw-prose-hr: oklch(0.928 0.006 264.531);
      --tw-prose-quotes: oklch(0.21 0.034 264.665);
      --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
      --tw-prose-captions: oklch(0.551 0.027 264.364);
      --tw-prose-kbd: oklch(0.21 0.034 264.665);
      --tw-prose-kbd-shadows: NaN NaN NaN;
      --tw-prose-code: oklch(0.21 0.034 264.665);
      --tw-prose-pre-code: oklch(0.928 0.006 264.531);
      --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
      --tw-prose-th-borders: oklch(0.872 0.01 258.338);
      --tw-prose-td-borders: oklch(0.928 0.006 264.531);
      --tw-prose-invert-body: oklch(0.872 0.01 258.338);
      --tw-prose-invert-headings: #fff;
      --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
      --tw-prose-invert-links: #fff;
      --tw-prose-invert-bold: #fff;
      --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
      --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
      --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
      --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
      --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
      --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
      --tw-prose-invert-kbd: #fff;
      --tw-prose-invert-kbd-shadows: 255 255 255;
      --tw-prose-invert-code: #fff;
      --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
      --tw-prose-invert-pre-bg: #00000080;
      --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
      --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
      max-width: 65ch;
      font-size: 1rem;
      line-height: 1.75;
    }
    .dark\:prose
      :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    .dark\:prose
      :where([class~="lead"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: var(--tw-prose-lead);
      margin-top: 1.2em;
      margin-bottom: 1.2em;
      font-size: 1.25em;
      line-height: 1.6;
    }
    .dark\:prose
      :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      font-weight: 500;
      text-decoration: underline;
    }
    .dark\:prose
      :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    .dark\:prose
      :where(a strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ),
    .dark\:prose
      :where(blockquote strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ),
    .dark\:prose
      :where(thead th strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
    }
    .dark\:prose
      :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
      list-style-type: decimal;
    }
    .dark\:prose
      :where(ol[type="A"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: upper-alpha;
    }
    .dark\:prose
      :where(ol[type="a"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: lower-alpha;
    }
    .dark\:prose
      :where(ol[type="A s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: upper-alpha;
    }
    .dark\:prose
      :where(ol[type="a s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: lower-alpha;
    }
    .dark\:prose
      :where(ol[type="I"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: upper-roman;
    }
    .dark\:prose
      :where(ol[type="i"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: lower-roman;
    }
    .dark\:prose
      :where(ol[type="I s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: upper-roman;
    }
    .dark\:prose
      :where(ol[type="i s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: lower-roman;
    }
    .dark\:prose
      :where(ol[type="1"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      list-style-type: decimal;
    }
    .dark\:prose
      :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
      list-style-type: disc;
    }
    .dark\:prose
      :where(ol > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      )::marker {
      color: var(--tw-prose-counters);
      font-weight: 400;
    }
    .dark\:prose
      :where(ul > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      )::marker {
      color: var(--tw-prose-bullets);
    }
    .dark\:prose
      :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      margin-top: 1.25em;
      font-weight: 600;
    }
    .dark\:prose
      :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      border-color: var(--tw-prose-hr);
      border-top-width: 1px;
      margin-top: 3em;
      margin-bottom: 3em;
    }
    .dark\:prose
      :where(blockquote):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: var(--tw-prose-quotes);
      border-inline-start-width: 0.25rem;
      border-inline-start-color: var(--tw-prose-quote-borders);
      quotes: "“" "”" "‘" "’";
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
      font-style: italic;
      font-weight: 500;
    }
    .dark\:prose
      :where(blockquote p:first-of-type):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):before {
      content: open-quote;
    }
    .dark\:prose
      :where(blockquote p:last-of-type):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):after {
      content: close-quote;
    }
    .dark\:prose
      :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      margin-top: 0;
      margin-bottom: 0.888889em;
      font-size: 2.25em;
      font-weight: 800;
      line-height: 1.11111;
    }
    .dark\:prose
      :where(h1 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-weight: 900;
    }
    .dark\:prose
      :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      margin-top: 2em;
      margin-bottom: 1em;
      font-size: 1.5em;
      font-weight: 700;
      line-height: 1.33333;
    }
    .dark\:prose
      :where(h2 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-weight: 800;
    }
    .dark\:prose
      :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      font-size: 1.25em;
      font-weight: 600;
      line-height: 1.6;
    }
    .dark\:prose
      :where(h3 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-weight: 700;
    }
    .dark\:prose
      :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      font-weight: 600;
      line-height: 1.5;
    }
    .dark\:prose
      :where(h4 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-weight: 700;
    }
    .dark\:prose
      :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    .dark\:prose
      :where(picture):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 2em;
      margin-bottom: 2em;
      display: block;
    }
    .dark\:prose
      :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    .dark\:prose
      :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-kbd);
      box-shadow:
        0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
        0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      border-radius: 0.3125rem;
      padding-inline-start: 0.375em;
      font-family: inherit;
      font-size: 0.875em;
      font-weight: 500;
    }
    .dark\:prose
      :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-code);
      font-size: 0.875em;
      font-weight: 600;
    }
    .dark\:prose
      :where(code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):before,
    .dark\:prose
      :where(code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):after {
      content: "`";
    }
    .dark\:prose
      :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .dark\:prose
      :where(h1 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
    }
    .dark\:prose
      :where(h2 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-size: 0.875em;
    }
    .dark\:prose
      :where(h3 code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
      font-size: 0.9em;
    }
    .dark\:prose
      :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .dark\:prose
      :where(blockquote code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ),
    .dark\:prose
      :where(thead th code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: inherit;
    }
    .dark\:prose
      :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      background-color: var(--tw-prose-pre-bg);
      padding-top: 0.857143em;
      padding-inline-end: 1.14286em;
      padding-bottom: 0.857143em;
      border-radius: 0.375rem;
      margin-top: 1.71429em;
      margin-bottom: 1.71429em;
      padding-inline-start: 1.14286em;
      font-size: 0.875em;
      font-weight: 400;
      line-height: 1.71429;
      overflow-x: auto;
    }
    .dark\:prose
      :where(pre code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      font-weight: inherit;
      color: inherit;
      font-size: inherit;
      font-family: inherit;
      line-height: inherit;
      background-color: #0000;
      border-width: 0;
      border-radius: 0;
      padding: 0;
    }
    .dark\:prose
      :where(pre code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):before,
    .dark\:prose
      :where(pre code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ):after {
      content: none;
    }
    .dark\:prose
      :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      table-layout: auto;
      width: 100%;
      margin-top: 2em;
      margin-bottom: 2em;
      font-size: 0.875em;
      line-height: 1.71429;
    }
    .dark\:prose
      :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    .dark\:prose
      :where(thead th):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: var(--tw-prose-headings);
      vertical-align: bottom;
      padding-inline-end: 0.571429em;
      padding-bottom: 0.571429em;
      padding-inline-start: 0.571429em;
      font-weight: 600;
    }
    .dark\:prose
      :where(tbody tr):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    .dark\:prose
      :where(tbody tr:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      border-bottom-width: 0;
    }
    .dark\:prose
      :where(tbody td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      vertical-align: baseline;
    }
    .dark\:prose
      :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    .dark\:prose
      :where(tfoot td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      vertical-align: top;
    }
    .dark\:prose
      :where(th, td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      text-align: start;
    }
    .dark\:prose
      :where(figure > *):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .dark\:prose
      :where(figcaption):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      color: var(--tw-prose-captions);
      margin-top: 0.857143em;
      font-size: 0.875em;
      line-height: 1.42857;
    }
    .dark\:prose
      :where(picture > img):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .dark\:prose
      :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    .dark\:prose
      :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .dark\:prose
      :where(ul > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0.375em;
    }
    .dark\:prose
      :where(.prose > ul > li p):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    .dark\:prose
      :where(.prose > ul > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.25em;
    }
    .dark\:prose
      :where(.prose > ul > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.25em;
    }
    .dark\:prose
      :where(.prose > ol > li > p:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 1.25em;
    }
    .dark\:prose
      :where(.prose > ol > li > p:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 1.25em;
    }
    .dark\:prose
      :where(ul ul, ul ol, ol ul, ol ol):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    .dark\:prose
      :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    .dark\:prose
      :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    .dark\:prose
      :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .dark\:prose
      :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .dark\:prose
      :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
    .dark\:prose
      :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 0;
    }
    .dark\:prose
      :where(thead th:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .dark\:prose
      :where(thead th:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .dark\:prose
      :where(tbody td, tfoot td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-top: 0.571429em;
      padding-inline-end: 0.571429em;
      padding-bottom: 0.571429em;
      padding-inline-start: 0.571429em;
    }
    .dark\:prose
      :where(tbody td:first-child, tfoot td:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-start: 0;
    }
    .dark\:prose
      :where(tbody td:last-child, tfoot td:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      padding-inline-end: 0;
    }
    .dark\:prose
      :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    .dark\:prose
      :where(.prose > :first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-top: 0;
    }
    .dark\:prose
      :where(.prose > :last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
      ) {
      margin-bottom: 0;
    }
    .dark\:prose-invert {
      --tw-prose-body: var(--tw-prose-invert-body);
      --tw-prose-headings: var(--tw-prose-invert-headings);
      --tw-prose-lead: var(--tw-prose-invert-lead);
      --tw-prose-links: var(--tw-prose-invert-links);
      --tw-prose-bold: var(--tw-prose-invert-bold);
      --tw-prose-counters: var(--tw-prose-invert-counters);
      --tw-prose-bullets: var(--tw-prose-invert-bullets);
      --tw-prose-hr: var(--tw-prose-invert-hr);
      --tw-prose-quotes: var(--tw-prose-invert-quotes);
      --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
      --tw-prose-captions: var(--tw-prose-invert-captions);
      --tw-prose-kbd: var(--tw-prose-invert-kbd);
      --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
      --tw-prose-code: var(--tw-prose-invert-code);
      --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
      --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
      --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
      --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
    }
  }
  .prose-headings\:text-ellipsis
    :where(h1, h2, h3, h4, h5, h6, th):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    text-overflow: ellipsis;
  }
  .prose-headings\:underline
    :where(h1, h2, h3, h4, h5, h6, th):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    text-decoration-line: underline;
  }
  .prose-h1\:text-center
    :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-align: center;
  }
  .prose-h1\:text-3xl
    :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .prose-h2\:text-2xl
    :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .prose-h3\:text-xl
    :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .prose-h4\:text-lg
    :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .prose-h5\:text-sm
    :where(h5):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .prose-h6\:text-xl
    :where(h6):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .prose-p\:text-gray-700
    :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--color-gray-700);
  }
  .prose-a\:font-bold
    :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .prose-a\:text-blue-600
    :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--color-blue-600);
  }
  @media (hover: hover) {
    .hover\:prose-a\:text-blue-500:hover
      :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      color: var(--color-blue-500);
    }
  }
  .prose-blockquote\:italic
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-style: italic;
  }
  .prose-figure\:mx-auto
    :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-inline: auto;
  }
  .prose-figcaption\:opacity-75
    :where(figcaption):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    opacity: 0.75;
  }
  .prose-strong\:font-medium
    :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .prose-em\:italic
    :where(em):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-style: italic;
  }
  .prose-kbd\:border-b-2
    :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .prose-code\:font-mono
    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose-pre\:font-mono
    :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-family: var(--font-mono);
  }
  .prose-ol\:pl-6
    :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-left: calc(var(--spacing) * 6);
  }
  .prose-ul\:pl-8
    :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-left: calc(var(--spacing) * 8);
  }
  .prose-li\:my-4
    :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-block: calc(var(--spacing) * 4);
  }
  .prose-table\:my-8
    :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-block: calc(var(--spacing) * 8);
  }
  .prose-thead\:border-red-300
    :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: var(--color-red-300);
  }
  .prose-tr\:border-red-200
    :where(tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: var(--color-red-200);
  }
  .prose-th\:text-left
    :where(th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-align: left;
  }
  .prose-img\:rounded-lg
    :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-radius: var(--radius-lg);
  }
  .prose-img\:rounded-xl
    :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-radius: var(--radius-xl);
  }
  .prose-video\:my-12
    :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-block: calc(var(--spacing) * 12);
  }
  .prose-hr\:border-t-2
    :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }
  .prose-lead\:italic
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-style: italic;
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes ping {
  75%,
  to {
    opacity: 0;
    transform: scale(2);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%,
  to {
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    transform: translateY(-25%);
  }
  50% {
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transform: none;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-pan-x {
  syntax: "*";
  inherits: false;
}
@property --tw-pan-y {
  syntax: "*";
  inherits: false;
}
@property --tw-pinch-zoom {
  syntax: "*";
  inherits: false;
}
@property --tw-scroll-snap-strictness {
  syntax: "*";
  inherits: false;
  initial-value: proximity;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-size {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-layout {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-paint {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-style {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
